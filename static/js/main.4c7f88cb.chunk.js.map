{"version":3,"sources":["city/models.js","continent/models.js","shared/models.js","planet/models.js","system/models.js","orm.js","city/data.js","shared/data.js","city/store.js","continent/data.js","continent/store.js","planet/data.js","planet/store.js","system/data.js","system/store.js","shared/store.js","store.js","city/components/DragList.js","shared/selectors.js","city/selectors.js","city/components/Seat.js","continent/selectors.js","planet/selectors.js","system/selectors.js","shared/components/Purchase.js","city/components/Districts.js","city/components/People.js","shared/components/Resources.js","shared/components/Frame.js","city/components/CityRoute.js","continent/components/ContinentRoute.js","planet/components/PlanetRoute.js","system/components/SystemRoute.js","shared/components/Galaxy.js","routes.js","shared/components/App.js","index.js"],"names":["City","Model","modelName","fields","id","attr","housing","DistrictType","label","tasks","District","districtTypeId","fk","to","as","relatedName","cityId","Person","ResourceStockpile","resourceId","amount","limit","Seat","districtId","taskId","personId","oneToOne","Task","duration","effects","Continent","explored","biomes","planetId","Plot","continentId","Buyable","cost","Unlock","Resource","Planet","type","systemId","System","orm","ORM","stateSelector","state","root","register","CITY_NAMES","districtTypes","value","biome","SYSTEM_COUNT_RANGE","PLANET_COUNT_RANGE","CONTINENT_COUNT_RANGE","PLOT_COUNT_RANGE","getUniqueName","model","list","takenNames","all","toRefArray","map","p","sample","filter","includes","resources","color","buyables","wood","UNLOCKS","createCity","createAction","createCityReducer","sess","payload","plotId","people","plot","withId","allResources","toModelArray","create","continent","planet","system","ref","forEach","_resource","person","createPersonReducer","createDistrictReducer","update","createDistrict","seatCount","district","districtInstance","find","b","task","i","createSeatReducer","createSeat","progress","faker","name","firstName","drag","CONTINENT_NAMES","createContinentReducer","continentOpts","times","random","createPlotReducer","PLANET_NAMES","TYPES","createPlanet","planetInstance","SYSTEM_NAMES","createSystem","systemInstance","createInitial","BLACKLIST","unlockReducer","tick","updateResource","updateResourceReducer","ids","remaining","pickBy","v","city","stockpile","stockpiles","first","newAmount","clamp","explore","settle","reducers","INIT","length","buyable","resource","districtType","CREATE_CONTINENT","EXPLORE","explorable","planets","exclude","continents","plots","SETTLE","CREATE_CITY","CREATE_SEAT","CREATE_PERSON","CREATE_BUILDING","CREATE_PLOT","CREATE_PLANET","CREATE_SYSTEM","UPDATE_RESOURCE","TICK","updates","push","tickPeople","seat","effect","Array","isArray","tickSeats","pop","growth","s","tickCities","DRAG","source","destination","draggableId","draggedPerson","droppableId","otherPerson","_fields","index","foundSeat","split","transformCircular","createTransform","inboundState","key","stringify","outboundState","parse","persistConfig","storage","stateReconciler","autoMergeLevel2","transforms","persistedReducer","persistReducer","getEmptyState","action","reducer","session","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","DragList","items","props","provided","snapshot","innerRef","style","background","isDraggingOver","padding","minWidth","display","minHeight","Items","placeholder","React","memo","item","draggableProps","dragHandleProps","userSelect","marginRight","justifyContent","alignItems","textAlign","position","zIndex","isDragging","Item","totalResources","getUnlocks","createSelector","unlock","getBuyables","getStockpiles","getResourceTotals","_","getDistrictTypes","getPerson","getTask","getDistrictSeats","seats","getDistrictType","getCity","getCityContinent","getCityPlot","getCityResources","getCityDistricts","districts","getCityPeople","getCityResourceTotals","useSelector","progressPercent","Box","flexDirection","flex","maxWidth","backgroundColor","borderRadius","overflow","borderBottom","Typography","bgcolor","top","left","bottom","transition","transitionTimingFunction","right","m","pointerEvents","opacity","isDropDisabled","getContinents","getContinentsPlanet","getContinentsPlots","getContinentsCities","getContinentResources","getContinentResourceTotals","flat","t","getPlanets","getPlanetsSystem","getPlanetsContinents","getPlanetsCities","getPlanetStockpiles","getPlanetResourceTotals","getSystems","getSystemPlanets","getSystemsCities","getSystemStockpiles","getSystemResourceTotals","Purchase","disabled","dispatch","useDispatch","isAffordable","useGetIsAffordable","JSON","replace","attemptPurchase","a","Promise","Object","entries","Button","onClick","totals","useGetTotals","every","targetResource","r","Districts","unlocks","d","DistrictItem","taskGroups","groupBy","mb","DistrictTaskGroupItem","People","sort","ResourceText","data-tip","fontWeight","ml","numeral","format","Resources","hide","_resources","k","className","my","Frame","children","sidebar","Sidebar","linkText","uri","href","CityRoute","useParams","ContinentRoute","cities","CityItem","PlanetRoute","c","ContinentItem","SystemRoute","PlanetItem","Galaxy","systems","SystemItem","Routes","exact","path","render","App","useEffect","setInterval","clearInterval","Container","onDragEnd","rest","purge","localStorage","removeItem","location","reload","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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AP,GACxC3C,EAAyB2C,EAAzB3C,YAAgB8C,EAD+B,YACtBH,EADsB,iBAEjDQ,EAAYT,EAAK/C,UAAUoD,OAAO/C,GAMxC,OALA0C,EAAK3C,KAAKmD,OAAV,2BACKJ,GADL,IAEE5B,MAAOa,IAAOoB,EAAUtD,QACxBG,iBAEK0C,EAAK9B,OClCDsE,GAAe,CAC1B,UACA,WACA,YACA,UACA,UACA,QACA,UACA,UACA,YACA,WACA,aACA,YACA,YACA,YACA,UACA,SACA,YACA,WACA,cACA,YACA,YACA,YACA,WACA,WACA,UACA,SACA,YACA,YACA,aACA,YACA,UACA,WACA,UACA,WACA,SACA,UACA,YACA,WACA,aACA,aACA,cACA,cACA,WACA,UACA,SACA,UACA,WACA,WACA,YACA,aAGWC,GAAQ,CACnB,CAAElH,GAAI,YAAa4B,OAAQ,CAAC,SAAU,WAAY,SAAU,WC/CjDuF,GAAe,SAAC1C,GAAwB,IAAlBC,EAAiB,uDAAP,GACnCpC,EAAwBoC,EAAxBpC,SAAa6C,EAD6B,YAClBT,EADkB,cAE5C0C,EAAiB3C,EAAKrC,OAAO6C,OAAZ,2BAClBE,GADkB,IAErB9C,KAAMyB,IAAOoD,IACb9G,MAAOkD,EAAcmB,EAAKrC,OAAQ6E,IAClC3E,cAMF,OAJAwE,KAAMC,KAAM,WAAN,cAAU3D,KAAwB,kBACtCwD,GAAuBnC,EAAM,CAAE5C,SAAUuF,EAAe/B,IAAIrF,QAGvDyE,EAAK9B,OCnBD0E,GAAe,CAC1B,YACA,SACA,OACA,WACA,SACA,MACA,QACA,SACA,SACA,SACA,iBACA,SACA,iBACA,cACA,cACA,cACA,SACA,aACA,YACA,UACA,QACA,aACA,WACA,UACA,iBACA,mBACA,kBACA,SACA,SACA,OACA,SACA,YACA,SACA,QACA,WACA,WACA,SACA,SACA,OACA,WACA,aACA,QACA,SACA,QACA,UACA,MACA,YACA,QACA,QACA,QACA,OACA,OACA,QACA,eACA,YACA,QACA,QACA,SACA,YACA,QACA,OACA,UACA,UACA,UACA,SACA,SACA,mBACA,SACA,QACA,YACA,UA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","file":"static/js/main.4c7f88cb.chunk.js","sourcesContent":["import { Model, attr, fk, oneToOne } from 'redux-orm'\n\nexport class City extends Model {}\nCity.modelName = 'City'\nCity.fields = {\n  id: attr(),\n  housing: attr(),\n  // plotId: oneToOne({ to: 'Plot', as: 'plot', relatedName: 'city' }),\n}\n\nexport class DistrictType extends Model {}\nDistrictType.modelName = 'DistrictType'\nDistrictType.fields = {\n  id: attr(),\n  label: attr(),\n  tasks: attr(),\n}\n\nexport class District extends Model {}\nDistrict.modelName = 'District'\nDistrict.fields = {\n  id: attr(),\n  districtTypeId: fk({\n    to: 'DistrictType',\n    as: 'districtType',\n    relatedName: 'districts',\n  }),\n  cityId: fk({ to: 'City', as: 'city', relatedName: 'districts' }),\n}\n\nexport class Person extends Model {}\nPerson.modelName = 'Person'\nPerson.fields = {\n  id: attr(),\n  cityId: fk({ to: 'City', as: 'city', relatedName: 'people' }),\n}\n\nexport class ResourceStockpile extends Model {}\nResourceStockpile.modelName = 'ResourceStockpile'\nResourceStockpile.fields = {\n  resourceId: fk({ to: 'Resource', as: 'resource', relatedName: 'stockpiles' }),\n  cityId: fk({ to: 'City', as: 'city', relatedName: 'stockpiles' }),\n  id: attr(),\n  amount: attr(),\n  limit: attr(),\n}\n\nexport class Seat extends Model {}\nSeat.modelName = 'Seat'\nSeat.fields = {\n  districtId: fk({ to: 'District', as: 'district', relatedName: 'seats' }),\n  taskId: fk({ to: 'Task', as: 'task', relatedName: 'seats' }),\n  personId: oneToOne({ to: 'Person', as: 'person', relatedName: 'seat' }),\n}\n\nexport class Task extends Model {}\nTask.modelName = 'Task'\nTask.fields = {\n  id: attr(),\n  duration: attr(),\n  effects: attr(),\n}\n","import { Model, attr, oneToOne, fk } from 'redux-orm'\nexport class Continent extends Model {}\nContinent.modelName = 'Continent'\nContinent.fields = {\n  id: attr(),\n  explored: attr(),\n  biomes: attr(),\n  planetId: fk({ to: 'Planet', as: 'planet', relatedName: 'continents' }),\n}\nexport class Plot extends Model {}\nPlot.modelName = 'Plot'\nPlot.fields = {\n  id: attr(),\n  cityId: oneToOne({ to: 'City', as: 'city', relatedName: 'plot' }),\n  continentId: fk({ to: 'Continent', as: 'continent', relatedName: 'plots' }),\n}\n","import { Model, attr } from 'redux-orm'\n\nexport class Buyable extends Model {}\nBuyable.modelName = 'Buyable'\nBuyable.fields = {\n  id: attr(),\n  label: attr(),\n  cost: attr(),\n}\n\nexport class Unlock extends Model {}\nUnlock.modelName = 'Unlock'\nUnlock.fields = {\n  id: attr(),\n}\n\nexport class Resource extends Model {}\nResource.modelName = 'Resource'\nResource.fields = {\n  id: attr(),\n}\n","import { Model, attr, fk } from 'redux-orm'\nexport class Planet extends Model {}\nPlanet.modelName = 'Planet'\nPlanet.fields = {\n  id: attr(),\n  type: attr(),\n  systemId: fk({ to: 'System', as: 'system', relatedName: 'planets' }),\n}\n","import { Model, attr } from 'redux-orm'\nexport class System extends Model {}\nSystem.modelName = 'System'\nSystem.fields = {\n  id: attr(),\n  explored: attr(),\n}\n","import { ORM } from 'redux-orm'\nimport {\n  Task,\n  Seat,\n  DistrictType,\n  District,\n  City,\n  ResourceStockpile,\n  Person,\n} from './city/models'\nimport { Continent, Plot } from './continent/models'\nimport { Buyable, Resource, Unlock } from './shared/models'\nimport { Planet } from './planet/models'\nimport { System } from './system/models'\n\nconst orm = new ORM({ stateSelector: (state) => state.root })\norm.register(\n  Task,\n  District,\n  Resource,\n  Person,\n  Planet,\n  System,\n  Unlock,\n  Plot,\n  Seat,\n  DistrictType,\n  ResourceStockpile,\n  City,\n  Buyable,\n  Continent,\n)\n\nexport default orm\n","export const CITY_NAMES = [\n  'Kilgate',\n  'Dustfair',\n  'Deadbreak',\n  'Greenscar',\n  'Silkbreak',\n  'Cragborough',\n  'Greenfrost',\n  'Snowhelm',\n  'Midacre',\n  'Fearvalley',\n  'Shadekeep',\n  'Steamvein',\n  'Tradespell',\n  'Westshell',\n  'Northreach',\n  'Fairrun',\n  'Oakenshire',\n  'Windhall',\n  'Redfrost',\n  'Glimmerborn',\n  'Redwick',\n  'Quicktown',\n  'Stormgulf',\n  'Deepgarde',\n  'Craghall',\n  'Lakeharbor',\n  'Bonehaven',\n  'Greenhand',\n  'Newshear',\n  'Puremere',\n  'Cloudwell',\n  'Oceanmoor',\n  'Rosehand',\n  'Boulderward',\n  'Sleettide',\n  'Bleakpost',\n  'Limehallow',\n  'Whalehall',\n  'Roguehelm',\n  'Knightcoast',\n  'Smoothcoast',\n  'Ebonwell',\n  'Basinfall',\n  'Winterview',\n  'Cursetide',\n  'Ravenborough',\n  'Boulderwind',\n  'Steelvale',\n  'Beachbury',\n  'Springfront',\n]\n\nexport const districtTypes = [\n  {\n    id: 'center',\n    label: 'City Center',\n    tasks: [{ id: 'scavenge' }],\n  },\n  { id: 'barracks', label: 'Encampment', tasks: [{ id: 'hunt' }] },\n  {\n    id: 'industry',\n    label: 'Industrial Zone',\n    tasks: [{ id: 'mine' }, { id: 'chop' }],\n  },\n  { id: 'church', label: 'Holy Site', tasks: [{ id: 'pray' }] },\n  { id: 'campus', label: 'Campus', tasks: [{ id: 'study' }] },\n  { id: 'market', label: 'Commercial Hub', tasks: [{ id: 'trade' }] },\n  { id: 'theatre', label: 'Theatre Square', tasks: [{ id: 'perform' }] },\n]\n\nexport const tasks = [\n  {\n    id: 'scavenge',\n    duration: 1,\n    effects: [\n      { id: 'food', value: [1, 4] },\n      { id: 'wood', value: [0, 0, 0, 0.1, 0.2] },\n    ],\n  },\n  {\n    id: 'chop',\n    biome: ['forest'],\n    duration: 1,\n    effects: [{ id: 'wood', value: 1 }],\n  },\n  {\n    id: 'farm',\n    biome: ['plain'],\n    duration: 1,\n    effects: [{ id: 'food', value: 10 }],\n  },\n  {\n    id: 'mine',\n    biome: ['mountain'],\n    duration: 1,\n    effects: [{ id: 'stone', value: 1 }],\n  },\n  { id: 'pray', duration: 1, effects: [{ id: 'faith', value: 1 }] },\n  { id: 'hunt', duration: 1, effects: [{ id: 'fur', value: 1 }] },\n  { id: 'trade', duration: 1, effects: [{ id: 'gold', value: 1 }] },\n  { id: 'perform', duration: 1, effects: [{ id: 'culture', value: 1 }] },\n  { id: 'study', duration: 1, effects: [{ id: 'science', value: 1 }] },\n  1,\n]\n","import sample from 'lodash/sample'\n\nexport const INTERVAL = 500\nexport const RESOURCE_MULTIPLIER = 500\nexport const UNLOCK_ALL = true\n\nexport const SYSTEM_COUNT_RANGE = [3, 3]\nexport const PLANET_COUNT_RANGE = [2, 5]\nexport const CONTINENT_COUNT_RANGE = [2, 4]\nexport const PLOT_COUNT_RANGE = [2, 6]\nexport const FOOD_DRAIN = 0.2\n\nexport const getUniqueName = (model, list) => {\n  const takenNames = model\n    .all()\n    .toRefArray()\n    .map((p) => p.label)\n  return sample(list.filter((p) => !takenNames.includes(p)))\n}\n\nexport const resources = [\n  { id: 'food', limit: 500, color: '#f95757' },\n  { id: 'wood', limit: 100, color: '#905100' },\n  { id: 'fur', limit: 100, color: '#d0865b' },\n  { id: 'stone', limit: 100, color: '#8a8a8a' },\n  { id: 'faith', limit: 100, color: '#9093ff' },\n  { id: 'gold', limit: 100, color: '#f1ba1a' },\n  { id: 'science', limit: 100, color: '#090eb5' },\n  { id: 'culture', limit: 100, color: '#ab16c5' },\n  { id: 'growth', limit: 100, color: '#000000' },\n]\n\nexport const buyables = [\n  {\n    id: 'buySeat',\n    label: '+ seat',\n    cost: { wood: 10 },\n  },\n  {\n    id: 'createDistrict',\n    label: '+ district',\n    cost: { wood: 50 },\n  },\n  {\n    id: 'buyCity',\n    label: '+ city',\n    cost: { wood: 100 },\n  },\n  {\n    id: 'exploreContinent',\n    label: 'explore',\n    cost: { wood: 1000 },\n  },\n  {\n    id: 'settleContinent',\n    label: 'settle continent',\n    cost: { wood: 500 },\n  },\n  {\n    id: 'explorePlanet',\n    label: 'explore ocean',\n    cost: { wood: 10000 },\n  },\n  {\n    id: 'settlePlanet',\n    label: 'settle planet',\n    cost: { wood: 5000 },\n  },\n  {\n    id: 'exploreSystem',\n    label: 'explore stars',\n    cost: { wood: 100000 },\n  },\n  {\n    id: 'settleSystem',\n    label: 'settle system',\n    cost: { wood: 50000 },\n  },\n  {\n    id: 'exploreGalaxy',\n    label: 'explore systems',\n    cost: { wood: 1000000 },\n  },\n]\n\nexport const UNLOCKS = [\n  'food',\n  'wood',\n  'fur',\n  'stone',\n  'faith',\n  'gold',\n  'science',\n  'culture',\n  'center',\n  'scavenge',\n  'barracks',\n  'hunt',\n  'industry',\n  'mine',\n  'chop',\n  'church',\n  'pray',\n  'campus',\n  'study',\n  'market',\n  'trade',\n  'theatre',\n  'perform',\n  'galaxy',\n  'system',\n  'planet',\n  'continent',\n]\n","import faker from 'faker'\nimport sample from 'lodash/sample'\nimport { CITY_NAMES } from './data'\nimport { RESOURCE_MULTIPLIER, getUniqueName } from '../shared/data'\nimport { createAction } from '@reduxjs/toolkit'\nimport { FOOD_DRAIN } from '../shared/data'\n\nexport const createCity = createAction('CREATE_CITY')\nexport const createCityReducer = (sess, payload) => {\n  const {\n    plotId,\n    label = getUniqueName(sess.City, CITY_NAMES),\n    people = [{}],\n  } = payload\n\n  const plot = sess.Plot.withId(plotId)\n  const allResources = sess.Resource.all().toModelArray()\n  const cityInstance = sess.City.create({\n    label,\n    housing: 5,\n    continentId: plot.continent.id,\n    planetId: plot.continent.planet.id,\n    systemId: plot.continent.planet.system.id,\n  })\n  const cityId = cityInstance.ref.id\n\n  allResources.forEach(({ id }) => {\n    const _resource = sess.Resource.withId(id)\n    const amount = _resource ? _resource.ref.amount : 0\n    const _limit = _resource ? _resource.ref.limit : 100\n    const limit = _limit * RESOURCE_MULTIPLIER\n    sess.ResourceStockpile.create({ resourceId: id, amount, limit, cityId })\n  })\n  people.forEach((person) => createPersonReducer(sess, { cityId, person }))\n  createDistrictReducer(sess, { cityId, districtTypeId: 'center' })\n\n  plot.update({ explored: true, cityId })\n  plot.continent.update({ explored: true })\n  plot.continent.planet.update({ explored: true })\n  plot.continent.planet.system.update({ explored: true })\n\n  return sess.state\n}\n\nexport const createDistrict = createAction('CREATE_BUILDING')\nexport const createDistrictReducer = (sess, payload) => {\n  const { cityId, districtTypeId, seatCount, ...district } = payload\n  const districtInstance = sess.District.create({\n    districtTypeId,\n    cityId,\n    ...district,\n  })\n  let districtType = sess.DistrictType.all()\n    .toModelArray()\n    .find((b) => b.id === districtTypeId)\n  districtType.tasks.forEach((task) => {\n    let i = seatCount || 1\n    while (i-- > 0) {\n      createSeatReducer(sess, {\n        districtId: districtInstance.id,\n        taskId: task.id,\n      })\n    }\n  })\n\n  return sess.state\n}\n\nexport const createSeat = createAction('CREATE_SEAT')\nexport const createSeatReducer = (sess, { districtId, taskId }) => {\n  sess.Seat.create({ progress: 0, taskId, districtId })\n  return sess.state\n}\n\nexport const createPerson = createAction('CREATE_PERSON')\nexport const createPersonReducer = (sess, { cityId, person }) => {\n  sess.Person.create({ label: faker.name.firstName(), ...person, cityId })\n  return sess.state\n}\n\nexport const drag = createAction('DRAG')\nexport const dragReducer = (sess, { source, destination, draggableId }) => {\n  // NICE: add swapping\n  if (!destination) {\n    return sess.state\n  }\n  let draggedPerson = sess.Person.all()\n    .toModelArray()\n    .find((person) => `${person.id}` === draggableId)\n  if (source.droppableId === destination.droppableId) {\n    let otherPerson = sess.Person.all()\n      .toModelArray()\n      .find((person) => person._fields.index === destination.index)\n    draggedPerson &&\n      draggedPerson.update({\n        index: destination.index,\n      })\n    otherPerson && otherPerson.update({ index: source.index })\n  } else {\n    let foundSeat = sess.Seat.withId(destination.droppableId.split('-')[1])\n    if (draggedPerson.seat) {\n      let currentSeat = sess.Seat.withId(draggedPerson.seat.id)\n      currentSeat.personId = null\n    }\n    if (foundSeat) {\n      foundSeat.update({ personId: draggedPerson.id })\n    }\n  }\n  return sess.state\n}\n\nexport function tickCities(sess, updates) {\n  sess.City.all()\n    .toModelArray()\n    .forEach((city) => {\n      const pop = city.people.all().toRefArray().length\n      const growth = city.stockpiles\n        .all()\n        .toRefArray()\n        .find((s) => s.resourceId === 'growth')\n      if (pop < city.housing) {\n        updates.push({\n          resourceId: 'growth',\n          id: city.id,\n          value: 1,\n        })\n        if (growth && growth.amount >= 5) {\n          createPersonReducer(sess, { cityId: city.id })\n          updates.push({\n            resourceId: 'growth',\n            id: city.id,\n            value: -5,\n          })\n        }\n      }\n    })\n}\n\nexport function tickSeats(sess, updates) {\n  // TODO: reduce the number of updates this pushes by combining all similar city id updates\n  sess.Seat.all()\n    .toModelArray()\n    .forEach((seat) => {\n      const { effects, duration } = seat.task\n      const id = seat.district.city.id\n      if (seat.progress >= duration) {\n        effects.forEach((effect) => {\n          const resourceId = effect.id\n          let value = effect.value\n          if (Array.isArray(value)) {\n            value = sample(value)\n          }\n          value = value * RESOURCE_MULTIPLIER\n          updates.push({ resourceId, value, id })\n        })\n        return seat.update({ progress: 0 })\n      }\n      seat.update({\n        progress: seat.person ? seat.progress + 1 : seat.progress,\n      })\n    })\n}\n\nexport function tickPeople(sess, updates) {\n  sess.City.all()\n    .toModelArray()\n    .forEach((city) => {\n      updates.push({\n        resourceId: 'food',\n        id: city.id,\n        value: FOOD_DRAIN * -city.people.all().toModelArray().length,\n      })\n    })\n}\n","export const CONTINENT_NAMES = [\n  'Ihaes',\n  'Clopath',\n  'Prafica',\n  'Eadari',\n  'Aecoya',\n  'Auhela',\n  'Heuvruprix',\n  'Yamiuyith',\n  'Vraeholall',\n  'Wekraitruin',\n  'Shulela',\n  'Awin',\n  'Utun',\n  'Iuslos',\n  'Vleorath',\n  'Miogaes',\n  'Iyuagea',\n  'Aibutend',\n  'Jiodrefias',\n  'Breidimune',\n  'Fohira',\n  'Drafos',\n  'Owios',\n  'Euyune',\n  'Aebran',\n  'Ogoa',\n  'Cuslaizor',\n  'Sledaudon',\n  'Iakeheron',\n  'Tiukunoth',\n  'Ulul',\n  'Olix',\n  'Vlizos',\n  'Drowrand',\n  'Eikrin',\n  'Eucrora',\n  'Sleiqiseth',\n  'Klaepimuin',\n  'Yaibrohall',\n  'Griufowos',\n  'Hotox',\n  'Amela',\n  'Egela',\n  'Traphith',\n  'Eubres',\n  'Heacax',\n  'Eohipor',\n  'Qaeshufix',\n  'Iazulela',\n  'Aewimix',\n]\n","import times from 'lodash/times'\nimport sample from 'lodash/sample'\nimport random from 'lodash/random'\nimport { CONTINENT_NAMES } from './data'\nimport { getUniqueName, PLOT_COUNT_RANGE } from '../shared/data'\n\nexport const createContinentReducer = (sess, payload = {}) => {\n  const {\n    planetId,\n    label = getUniqueName(sess.Continent, CONTINENT_NAMES),\n    ...continentOpts\n  } = payload\n  const planet = sess.Planet.withId(planetId)\n  const continent = sess.Continent.create({\n    ...continentOpts,\n    explored: false,\n    biomes: planet.type.biomes,\n    label,\n    planetId,\n  })\n  times(random(...PLOT_COUNT_RANGE), () =>\n    createPlotReducer(sess, { continentId: continent.id }),\n  )\n  return sess.state\n}\n\nexport const createPlotReducer = (sess, payload = {}) => {\n  const { continentId, ...plot } = payload\n  const continent = sess.Continent.withId(continentId)\n  sess.Plot.create({\n    ...plot,\n    biome: sample(continent.biomes),\n    continentId,\n  })\n  return sess.state\n}\n","export const PLANET_NAMES = [\n  'Uphavis',\n  'Togrinus',\n  'Canzarvis',\n  'Xanvara',\n  'Suicury',\n  'Zopra',\n  'Cheutov',\n  'Vuyonus',\n  'Tryria BL',\n  'Moth I2W',\n  'Tachaistea',\n  'Rigrithea',\n  'Delmeshan',\n  'Chidrilia',\n  'Thahiri',\n  'Soturn',\n  'Llutetune',\n  'Mupeyama',\n  'Gillon P8E8',\n  'Phurn 8U7',\n  'Thibbunus',\n  'Tolnoavis',\n  'Modillon',\n  'Yallagua',\n  'Xiastea',\n  'Xounia',\n  'Nozacarro',\n  'Phusiyama',\n  'Dapus 6552',\n  'Llov 0310',\n  'Onnelea',\n  'Komaerus',\n  'Monnore',\n  'Thunkyke',\n  'Luamia',\n  'Keistea',\n  'Gapenides',\n  'Trodenus',\n  'Gyria 84WZ',\n  'Gnone 21SV',\n  'Runzoaclite',\n  'Bestritania',\n  'Ollilles',\n  'Yobomia',\n  'Vatune',\n  'Duistea',\n  'Drosenus',\n  'Grooruta',\n  'Chypso 75',\n  'Lion 6S1Z',\n]\n\nexport const TYPES = [\n  { id: 'earthlike', biomes: ['forest', 'mountain', 'tundra', 'plain'] },\n]\n\nexport const BIOMES = [\n  { id: 'forest' },\n  { id: 'mountain' },\n  { id: 'tundra' },\n  { id: 'plain' },\n]\n","import random from 'lodash/random'\nimport sample from 'lodash/sample'\nimport times from 'lodash/times'\nimport { createContinentReducer } from '../continent/store'\nimport { getUniqueName, CONTINENT_COUNT_RANGE } from '../shared/data'\nimport { PLANET_NAMES, TYPES } from './data'\n\nexport const createPlanet = (sess, payload = {}) => {\n  const { systemId, ...planet } = payload\n  const planetInstance = sess.Planet.create({\n    ...planet,\n    type: sample(TYPES),\n    label: getUniqueName(sess.Planet, PLANET_NAMES),\n    systemId,\n  })\n  times(random(...CONTINENT_COUNT_RANGE), () =>\n    createContinentReducer(sess, { planetId: planetInstance.ref.id }),\n  )\n\n  return sess.state\n}\n","export const SYSTEM_NAMES = [\n  'Andromeda',\n  'Antlia',\n  'Apus',\n  'Aquarius',\n  'Aquila',\n  'Ara',\n  'Aries',\n  'Auriga',\n  'Bootes',\n  'Caelum',\n  'Camelopardalis',\n  'Cancer',\n  'Canes Venatici',\n  'Canis Major',\n  'Canis Minor',\n  'Capricornus',\n  'Carina',\n  'Cassiopeia',\n  'Centaurus',\n  'Cepheus',\n  'Cetus',\n  'Chamaeleon',\n  'Circinus',\n  'Columba',\n  'Coma Berenices',\n  'Corona Australis',\n  'Corona Borealis',\n  'Corvus',\n  'Crater',\n  'Crux',\n  'Cygnus',\n  'Delphinus',\n  'Dorado',\n  'Draco',\n  'Equuleus',\n  'Eridanus',\n  'Fornax',\n  'Gemini',\n  'Grus',\n  'Hercules',\n  'Horologium',\n  'Hydra',\n  'Hydrus',\n  'Indus',\n  'Lacerta',\n  'Leo',\n  'Leo Minor',\n  'Lepus',\n  'Libra',\n  'Lupus',\n  'Lynx',\n  'Lyra',\n  'Mensa',\n  'Microscopium',\n  'Monoceros',\n  'Musca',\n  'Norma',\n  'Octans',\n  'Ophiuchus',\n  'Orion',\n  'Pavo',\n  'Pegasus',\n  'Perseus',\n  'Phoenix',\n  'Pictor',\n  'Pisces',\n  'Piscis Austrinus',\n  'Puppis',\n  'Pyxis',\n  'Reticulum',\n  'Sagitta',\n  'Sagittarius',\n  'Scorpius',\n  'Sculptor',\n  'Scutum',\n  'Serpens',\n  'Sextans',\n  'Taurus',\n  'Telescopium',\n  'Triangulum',\n  'Triangulum Australe',\n  'Tucana',\n  'Ursa Major',\n  'Ursa Minor',\n  'Vela',\n  'Virgo',\n  'Volans',\n  'Vulpecula',\n]\n","import random from 'lodash/random'\nimport times from 'lodash/times'\nimport { createPlanet } from '../planet/store'\nimport { PLANET_COUNT_RANGE, getUniqueName } from '../shared/data'\nimport { SYSTEM_NAMES } from './data'\n\nexport const createSystem = (sess, planet = {}) => {\n  const systemInstance = sess.System.create({\n    ...planet,\n    explored: false,\n    label: getUniqueName(sess.System, SYSTEM_NAMES),\n  })\n  times(random(...PLANET_COUNT_RANGE), () =>\n    createPlanet(sess, { systemId: systemInstance.ref.id }),\n  )\n\n  return sess.state\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { createCityReducer } from '../city/store'\nimport { tickCities, tickPeople, tickSeats } from '../city/store'\nimport random from 'lodash/random'\nimport pickBy from 'lodash/pickBy'\nimport times from 'lodash/times'\nimport { tasks } from '../city/data'\nimport {\n  SYSTEM_COUNT_RANGE,\n  UNLOCK_ALL,\n  resources,\n  buyables,\n  UNLOCKS,\n} from './data'\nimport { districtTypes } from '../city/data'\nimport { createSystem } from '../system/store'\nimport clamp from 'lodash/clamp'\n\nexport const createInitial = createAction('INIT')\nexport const createInitialReducer = (sess) => {\n  if (sess.System.all().toRefArray().length === 0) {\n    // TODO: these should update the stats of the loaded entities if already started\n    buyables.forEach((buyable) => sess.Buyable.create({ ...buyable }))\n    resources.forEach((resource) =>\n      sess.Resource.create({ ...resource, amount: 0 }),\n    )\n    tasks.forEach((task) => sess.Task.create({ ...task }))\n    districtTypes.forEach(({ ...districtType }) =>\n      sess.DistrictType.create({ ...districtType }),\n    )\n\n    times(random(...SYSTEM_COUNT_RANGE), () => createSystem(sess, {}))\n    createCityReducer(sess, { plotId: sess.Plot.first().id })\n    unlockReducer(sess, 'center')\n    updateResourceReducer(sess, { resourceId: 'food', id: 0, value: 100 })\n\n    if (UNLOCK_ALL) {\n      UNLOCKS.forEach((id) => unlockReducer(sess, id))\n    }\n  }\n\n  return sess.state\n}\n\nconst BLACKLIST = ['growth']\nexport const unlock = createAction('UNLOCK')\nexport const unlockReducer = (sess, payload = {}) => {\n  if (!sess.Unlock.withId(payload) && !BLACKLIST.includes(payload)) {\n    sess.Unlock.create({ id: payload })\n  }\n  return sess.state\n}\n\nexport const tick = createAction('TICK')\nexport const applyTickEffectsReducer = (sess) => {\n  let updates = []\n  tickPeople(sess, updates)\n  tickSeats(sess, updates)\n  tickCities(sess, updates)\n\n  updates.forEach((update) => updateResourceReducer(sess, update))\n\n  return sess.state\n}\n\nexport const updateResource = createAction('UPDATE_RESOURCE')\nexport function updateResourceReducer(sess, { resourceId, value, ...ids }) {\n  if (value === 0) return sess.state\n\n  unlockReducer(sess, resourceId)\n  let remaining = value\n  sess.City.filter(pickBy(ids, (v) => typeof v === 'number'))\n    .toModelArray()\n    .forEach((city) => {\n      const stockpile = city.stockpiles.filter({ resourceId }).first()\n      const newAmount = clamp(stockpile.amount + remaining, 0, stockpile.limit)\n      remaining = stockpile.amount + remaining - newAmount\n      stockpile.update({ amount: newAmount })\n    })\n\n  return sess.state\n}\n\nexport const explore = createAction('EXPLORE')\nexport const exploreReducer = (sess, payload = {}) => {\n  const { systemId, planetId, continentId } = payload\n  let explorable\n  if (typeof systemId === 'number') {\n    const system = sess.System.withId(systemId)\n    explorable = system.planets.exclude({ explored: true }).first()\n  } else if (typeof planetId === 'number') {\n    const planet = sess.Planet.withId(planetId)\n    explorable = planet.continents.exclude({ explored: true }).first()\n  } else if (typeof continentId === 'number') {\n    const continent = sess.Continent.withId(continentId)\n    explorable = continent.plots.exclude({ explored: true }).first()\n  } else {\n    explorable = sess.System.exclude({ explored: true }).first()\n  }\n  explorable.update({ explored: true })\n  return sess.state\n}\n\nexport const settle = createAction('SETTLE')\nexport const settleReducer = (sess, payload = {}) => {\n  const { systemId, planetId, continentId } = payload\n  let plotId\n  if (typeof systemId === 'number') {\n    const system = sess.System.withId(systemId)\n    plotId = system.planets.first().continents.first().plots.first().id\n  } else if (typeof planetId === 'number') {\n    const planet = sess.Planet.withId(planetId)\n    plotId = planet.continents.first().plots.first().id\n  } else if (typeof continentId === 'number') {\n    const continent = sess.Continent.withId(continentId)\n    plotId = continent.plots.first().id\n  }\n  createCityReducer(sess, { plotId })\n  return sess.state\n}\n","import { createStore, combineReducers } from 'redux'\nimport { persistStore, persistReducer, createTransform } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\nimport { parse, stringify } from 'flatted'\nimport orm from './orm'\nimport {\n  createInitialReducer,\n  applyTickEffectsReducer,\n  updateResourceReducer,\n  exploreReducer,\n  settleReducer,\n} from './shared/store'\nimport { createPlanet } from './planet/store'\nimport { createSystem } from './system/store'\nimport { createPlotReducer, createContinentReducer } from './continent/store'\nimport {\n  createCityReducer,\n  createSeatReducer,\n  createDistrictReducer,\n  dragReducer,\n  createPersonReducer,\n} from './city/store'\n\nconst reducers = {\n  INIT: createInitialReducer,\n  CREATE_CONTINENT: createContinentReducer,\n  EXPLORE: exploreReducer,\n  SETTLE: settleReducer,\n  CREATE_CITY: createCityReducer,\n  CREATE_SEAT: createSeatReducer,\n  CREATE_PERSON: createPersonReducer,\n  CREATE_BUILDING: createDistrictReducer,\n  CREATE_PLOT: createPlotReducer,\n  CREATE_PLANET: createPlanet,\n  CREATE_SYSTEM: createSystem,\n  UPDATE_RESOURCE: updateResourceReducer,\n  TICK: applyTickEffectsReducer,\n  DRAG: dragReducer,\n}\n\nconst reducer = (state = orm.getEmptyState(), action) => {\n  const reducer = reducers[action.type]\n  if (reducer) {\n    return reducer(orm.session(state), action.payload)\n  }\n  return state\n}\n\nconst transformCircular = createTransform(\n  (inboundState, key) => stringify(inboundState),\n  (outboundState, key) => parse(outboundState),\n)\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: autoMergeLevel2,\n  transforms: [transformCircular],\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\nconst rootReducer = combineReducers({ root: persistedReducer })\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n)\nexport const persistor = persistStore(store)\n\nexport default store\n","import React from 'react'\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\n\nexport const DragList = ({ items, ...props }) => (\n  <Droppable {...props}>\n    {(provided, snapshot) => (\n      <div\n        ref={provided.innerRef}\n        style={{\n          background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n          padding: 8,\n          minWidth: 60,\n          display: 'flex',\n          minHeight: 55,\n        }}\n      >\n        <Items items={items} />\n        {provided.placeholder}\n      </div>\n    )}\n  </Droppable>\n)\n\nconst Items = React.memo(({ items }) =>\n  items.map((item, index) => (\n    <Draggable key={item.id + index} draggableId={`${item.id}`} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={{\n            userSelect: 'none',\n            padding: 8,\n            marginRight: 8,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            minHeight: 40,\n            textAlign: 'center',\n            position: 'relative',\n            zIndex: snapshot.isDragging ? 20 : 1,\n            background: snapshot.isDragging ? 'lightgreen' : 'grey',\n            ...provided.draggableProps.style,\n          }}\n        >\n          <Item item={item} index={index} />\n        </div>\n      )}\n    </Draggable>\n  )),\n)\n\nconst Item = React.memo((props) => <span>{props.item.label}</span>)\n","import { createSelector } from 'redux-orm'\nimport orm from '../orm'\n\nexport const totalResources = (list) => {\n  let resources = {}\n  list.forEach((stockpile) => {\n    const { amount, limit, resourceId, color } = stockpile\n    resources[resourceId] = resources[resourceId] || {\n      amount: 0,\n      limit: 0,\n      //TODO\n      color,\n    }\n    resources[resourceId].amount += amount\n    resources[resourceId].limit += limit\n  })\n  return resources\n}\n\nexport const getUnlocks = createSelector(orm, (session) =>\n  session.Unlock.all()\n    .toModelArray()\n    .map((unlock) => unlock.ref.id),\n)\n\nexport const getBuyables = createSelector(orm.Buyable)\nconst getStockpiles = createSelector(orm.ResourceStockpile)\nexport const getResourceTotals = createSelector(\n  orm,\n  getStockpiles,\n  (_, stockpiles) => totalResources(stockpiles),\n)\n","import { createSelector } from 'redux-orm'\nimport orm from '../orm'\nimport { totalResources } from '../shared/selectors'\n\nexport const getDistrictTypes = createSelector(orm.DistrictType)\nexport const getDistrict = createSelector(orm.District)\nexport const getPerson = createSelector(orm.Person)\nexport const getTask = createSelector(orm.Task)\nexport const getDistrictSeats = createSelector(orm.District.seats)\nexport const getDistrictType = createSelector(orm.District.districtType)\nexport const getCity = createSelector(orm.City)\nexport const getCityContinent = createSelector(orm.City.plot.continent)\nexport const getPersonSeat = createSelector(orm.Person.seat)\nexport const getCityPlot = createSelector(orm.City.plot)\nexport const getCityResources = createSelector(orm.City.stockpiles)\nexport const getCityDistricts = createSelector(orm.City.districts)\nexport const getCityPeople = createSelector(\n  orm,\n  orm.City.people,\n  (state, people) =>\n    people\n      ? people\n          .filter((s) => !!s)\n          .map((p) => {\n            const seat = state.Seat.all()\n              .toModelArray()\n              .find((s) => s.personId === p.id)\n            return { ...p, seat: seat ? seat.ref : null }\n          })\n      : [],\n)\n\nexport const getCityResourceTotals = createSelector(\n  orm,\n  getCityResources,\n  (_, stockpiles) => totalResources(stockpiles),\n)\n","import React from 'react'\nimport { Box, Typography } from '@material-ui/core'\nimport { DragList } from './DragList'\nimport { INTERVAL } from '../../shared/data'\nimport { useSelector } from 'react-redux'\nimport { getTask, getPerson } from '../selectors'\n\nconst Seat = ({ seat }) => {\n  const task = useSelector((state) => getTask(state, seat.taskId))\n  const person = useSelector((state) =>\n    getPerson(state, typeof seat.personId === 'number' ? seat.personId : null),\n  )\n  const progressPercent = 1 - seat.progress / task.duration\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" flex={1} maxWidth={90}>\n      <Box\n        style={{\n          flex: 1,\n          marginRight: 8,\n          position: 'relative',\n          backgroundColor: 'lightgray',\n          borderRadius: 4,\n          overflow: 'hidden',\n        }}\n      >\n        <Box position=\"relative\">\n          <Box position=\"relative\" style={{ borderBottom: '1px solid #999' }}>\n            <Typography\n              style={{ textAlign: 'center', position: 'relative', zIndex: 2 }}\n            >\n              {task.id}\n            </Typography>\n\n            {typeof progressPercent === 'number' && (\n              <Box\n                position=\"absolute\"\n                bgcolor=\"green\"\n                top={0}\n                left={0}\n                bottom={0}\n                style={{\n                  transition: `right ${INTERVAL}ms`,\n                  transitionTimingFunction: 'linear',\n                  zIndex: 1,\n                }}\n                right={`${progressPercent * 100}%`}\n              />\n            )}\n          </Box>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <Box minHeight={56} position=\"relative\" m={1}>\n              <Box\n                position=\"absolute\"\n                bgcolor=\"gray\"\n                top={0}\n                left={0}\n                right={0}\n                bottom={0}\n                style={{\n                  pointerEvents: 'none',\n                  opacity: 0.3,\n                  zIndex: 1,\n                }}\n              />\n              <DragList\n                droppableId={`seat-${seat.id}`}\n                isDropDisabled={!!person}\n                items={person ? [person] : []}\n              />\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport { Seat }\n","import { createSelector } from 'redux-orm'\nimport orm from '../orm'\nimport { totalResources } from '../shared/selectors'\n\nexport const getContinents = createSelector(orm.Continent)\nexport const getContinentsPlanet = createSelector(orm.Continent.planet)\nexport const getContinentsPlots = createSelector(orm.Continent.plots)\nexport const getContinentsCities = createSelector(\n  orm.Continent.plots.map(orm.Plot.city),\n)\nexport const getContinentResources = createSelector(\n  orm.Continent.plots.map(orm.Plot.city.stockpiles),\n)\n\nexport const getContinentResourceTotals = createSelector(\n  orm,\n  getContinentResources,\n  (_, stockpiles) => totalResources(stockpiles.flat(5).filter((t) => !!t)),\n)\n","import { createSelector } from 'redux-orm'\nimport orm from '../orm'\nimport { totalResources } from '../shared/selectors'\n\nexport const getPlanets = createSelector(orm.Planet)\nexport const getPlanetsSystem = createSelector(orm.Planet.system)\nexport const getPlanetsContinents = createSelector(orm.Planet.continents)\nexport const getPlanetsCities = createSelector(\n  orm.Planet.continents.map(orm.Continent.plots.map(orm.Plot.city)),\n)\nexport const getPlanetStockpiles = createSelector(\n  orm.Planet.continents.map(orm.Continent.plots.map(orm.Plot.city.stockpiles)),\n)\nexport const getPlanetResourceTotals = createSelector(\n  orm,\n  getPlanetStockpiles,\n  (_, stockpiles) => totalResources(stockpiles.flat(5).filter((t) => !!t)),\n)\n","import { createSelector } from 'redux-orm'\nimport orm from '../orm'\nimport { totalResources } from '../shared/selectors'\n\nexport const getSystems = createSelector(orm.System)\nexport const getSystemPlanets = createSelector(orm.System.planets)\nexport const getSystemsCities = createSelector(\n  orm.System.planets.map(\n    orm.Planet.continents.map(orm.Continent.plots.map(orm.Plot.city)),\n  ),\n)\nconst getSystemStockpiles = createSelector(\n  orm.System.planets.map(\n    orm.Planet.continents.map(\n      orm.Continent.plots.map(orm.Plot.city.stockpiles),\n    ),\n  ),\n)\n\nexport const getSystemResourceTotals = createSelector(\n  orm,\n  getSystemStockpiles,\n  (_, stockpiles) => totalResources(stockpiles.flat(5).filter((t) => !!t)),\n)\n","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getContinentResourceTotals } from '../../continent/selectors'\nimport { getBuyables, getResourceTotals } from '../selectors'\nimport { getPlanetResourceTotals } from '../../planet/selectors'\nimport { getSystemResourceTotals } from '../../system/selectors'\nimport { getCityResourceTotals } from '../../city/selectors'\nimport { updateResource } from '../store'\n\nexport const Purchase = ({ id, label, action, disabled, ...ids }) => {\n  const dispatch = useDispatch()\n  const buyables = useSelector(getBuyables)\n  const buyable = buyables.find((b) => b.id === id)\n  const isAffordable = useGetIsAffordable({ buyable, ...ids })\n  if (!buyable) {\n    return null\n  }\n  const cost = JSON.stringify(buyable.cost)\n    .replace(/\"/g, '')\n    .replace(/\\{|\\}/g, '')\n\n  const attemptPurchase = async () => {\n    if (!disabled && isAffordable) {\n      await Promise.all(\n        Object.entries(buyable.cost).map(([resourceId, value]) =>\n          dispatch(updateResource({ resourceId, value: -value, ...ids })),\n        ),\n      )\n      await dispatch(action)\n    }\n  }\n\n  return (\n    <Button\n      onClick={attemptPurchase}\n      style={{ display: 'block', opacity: !disabled && isAffordable ? 1 : 0.5 }}\n    >\n      {label || buyable.label} ({cost})\n    </Button>\n  )\n}\n\nconst useGetIsAffordable = ({ buyable, ...ids }) => {\n  const totals = useGetTotals(ids)\n  if (!buyable) return false\n  return Object.entries(buyable.cost).every(([key, value]) => {\n    const targetResource = Object.entries(totals)\n      .map(([resourceId, { amount }]) => ({ resourceId, amount: amount }))\n      .find((r) => r.resourceId === key)\n\n    if (!targetResource) {\n      return false\n    }\n\n    return value <= targetResource.amount ? targetResource.amount : 0\n  })\n}\n\nconst useGetTotals = ({ cityId, continentId, planetId, systemId }) =>\n  useSelector((state) => {\n    if (typeof cityId === 'number') {\n      return getCityResourceTotals(state, +cityId)\n    }\n    if (typeof continentId === 'number') {\n      return getContinentResourceTotals(state, +continentId)\n    }\n    if (typeof planetId === 'number') {\n      return getPlanetResourceTotals(state, +planetId)\n    }\n    if (typeof systemId === 'number') {\n      return getSystemResourceTotals(state, +systemId)\n    }\n\n    return getResourceTotals(state)\n  })\n","import React from 'react'\nimport { Typography, Box } from '@material-ui/core'\nimport { Seat } from './Seat'\nimport { Purchase } from '../../shared/components/Purchase'\nimport { createSeat, createDistrict } from '../store'\nimport groupBy from 'lodash/groupBy'\nimport { useSelector } from 'react-redux'\nimport { getUnlocks } from '../../shared/selectors'\nimport {\n  getDistrictType,\n  getDistrictTypes,\n  getDistrictSeats,\n} from '../selectors'\n\nexport const Districts = ({ continentId, cityId, districts }) => {\n  const unlocks = useSelector(getUnlocks)\n  const districtTypes = useSelector(getDistrictTypes).filter(\n    (b) => !districts.map((b) => b.districtTypeId).includes(b.id),\n  )\n  return (\n    <Box>\n      {districts\n        .filter((d) => unlocks.includes(d.districtTypeId))\n        .map((district) => (\n          <DistrictItem\n            key={`district-${district.id}`}\n            districtId={district.id}\n            continentId={continentId}\n            cityId={cityId}\n          />\n        ))}\n      {districtTypes\n        .filter((b) => unlocks.includes(b.districtTypeId))\n        .map((districtType) => (\n          <Purchase\n            key={districtType.id}\n            id=\"createDistrict\"\n            label={`buy ${districtType.label}`}\n            cityId={+cityId}\n            action={createDistrict({ cityId, districtTypeId: districtType.id })}\n          />\n        ))}\n    </Box>\n  )\n}\n\nconst DistrictItem = ({ continentId, cityId, districtId }) => {\n  const districtType = useSelector((state) =>\n    getDistrictType(state, districtId),\n  )\n  const seats = useSelector((state) => getDistrictSeats(state, districtId))\n\n  const taskGroups = groupBy(seats, (seat) => seat.taskId)\n  return (\n    <Box mb={3}>\n      <Typography>{districtType.label}</Typography>\n\n      {Object.entries(taskGroups).map(([taskId, seats], index) => (\n        <DistrictTaskGroupItem\n          key={taskId}\n          taskId={taskId}\n          seats={seats}\n          index={index}\n          id={districtId}\n          continentId={continentId}\n          cityId={cityId}\n        />\n      ))}\n    </Box>\n  )\n}\n\nconst DistrictTaskGroupItem = (props) => (\n  <Box display=\"flex\">\n    {props.seats.map((seat) => (\n      <Seat key={`task${seat.id}`} index={props.index} seat={seat} />\n    ))}\n\n    <Purchase\n      continentId={+props.continentId}\n      id=\"buySeat\"\n      cityId={+props.cityId}\n      action={createSeat({\n        districtId: props.id,\n        taskId: props.taskId,\n      })}\n    />\n  </Box>\n)\n","import React from 'react'\nimport { DragList } from './/DragList'\n\nexport const People = ({ people }) => (\n  <>\n    <DragList\n      droppableId=\"people\"\n      items={people.filter((p) => !p.seat).sort((a, b) => a.index - b.index)}\n    />\n  </>\n)\n","import React from 'react'\nimport numeral from 'numeral'\nimport { Box, Typography } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { getUnlocks } from '../selectors'\nimport ReactTooltip from 'react-tooltip'\n\nexport const ResourceText = ({ resource }) => {\n  return (\n    <Box data-tip={resource.resourceId} display=\"flex\">\n      <Box>\n        <Typography style={{ color: resource.color, fontWeight: 'bold' }}>\n          {resource.resourceId}:\n        </Typography>\n      </Box>\n      <Box ml={1} display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        <Typography>\n          {numeral(resource.amount).format('0,0.0')}/\n          {numeral(resource.limit).format('0,0')}\n        </Typography>\n      </Box>\n    </Box>\n  )\n}\n\nexport const Resources = ({ hide, resources }) => {\n  const unlocks = useSelector(getUnlocks)\n\n  if (hide) {\n    return null\n  }\n\n  let _resources = resources\n  if (!Array.isArray(resources)) {\n    _resources = Object.entries(resources).map(([k, v]) => ({\n      resourceId: k,\n      ...v,\n    }))\n  }\n  return (\n    <Box className=\"flex flex-column\" my={1}>\n      {_resources\n        .filter((r) => unlocks.includes(r.resourceId))\n        .map((resource) => (\n          <Box key={resource.resourceId} display=\"flex\" flexDirection=\"row\">\n            <ResourceText resource={resource} />\n          </Box>\n        ))}\n      <ReactTooltip></ReactTooltip>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Box } from '@material-ui/core'\nimport { Resources } from './Resources'\nexport const Frame = ({ children, sidebar }) => (\n  <Box display=\"flex\">\n    <Box display=\"flex\" flexDirection=\"column\" flex={3} minWidth={150} p={1}>\n      {sidebar}\n    </Box>\n    <Box flex={7} p={1}>\n      {children}\n    </Box>\n  </Box>\n)\n\nexport const Sidebar = ({ label, resources, linkText, uri, children }) => (\n  <>\n    {uri ? <a href={uri}>{linkText}</a> : <br />}\n    <br />\n    <span>{label}</span>\n    {children}\n    <Resources resources={resources} />\n  </>\n)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Districts } from './Districts'\nimport { People } from './People'\nimport {\n  getCity,\n  getCityContinent,\n  getCityPlot,\n  getCityResources,\n  getCityDistricts,\n  getCityPeople,\n} from '../selectors'\nimport { getUnlocks } from '../../shared/selectors'\nimport { useParams } from 'react-router'\nimport { Sidebar, Frame } from '../../shared/components/Frame'\n\nexport const CityRoute = () => {\n  const { id = '0' } = useParams()\n  const city = useSelector((state) => getCity(state, +id))\n  const continent = useSelector((state) => getCityContinent(state, +id))\n  const plot = useSelector((state) => getCityPlot(state, +id))\n  const people = useSelector((state) => getCityPeople(state, +id))\n  const resources = useSelector((state) => getCityResources(state, +id))\n  const districts = useSelector((state) => getCityDistricts(state, +id))\n  const unlocks = useSelector(getUnlocks)\n\n  if (!city) {\n    return null\n  }\n\n  return (\n    <Frame\n      sidebar={\n        <Sidebar\n          uri={unlocks.includes('continent') && `#/continent/${continent.id}`}\n          linkText={\n            unlocks.includes('continent') && `Back to ${continent.label}`\n          }\n          label={`City: ${city.label}`}\n          resources={resources}\n        >\n          <span>biome: {plot.biome}</span>\n          <span>\n            housing: {people.length}/{city.housing}\n          </span>\n        </Sidebar>\n      }\n    >\n      <People people={people} />\n\n      <Districts\n        continentId={continent.id}\n        cityId={city.id}\n        districts={districts}\n      />\n    </Frame>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Box, Typography } from '@material-ui/core'\nimport { getUnlocks } from '../../shared/selectors'\nimport {\n  getContinentResourceTotals,\n  getContinentsPlanet,\n  getContinentsCities,\n  getContinentsPlots,\n  getContinents,\n} from '../selectors'\nimport { Purchase } from '../../shared/components/Purchase'\nimport { explore } from '../../shared/store'\nimport { createCity } from '../../city/store'\nimport { useParams } from 'react-router'\nimport { Sidebar, Frame } from '../../shared/components/Frame'\nimport { Resources } from '../../shared/components/Resources'\n\nexport const ContinentRoute = () => {\n  const { id = '0' } = useParams()\n  const continent = useSelector((state) => getContinents(state, +id))\n  const planet = useSelector((state) => getContinentsPlanet(state, +id))\n  const cities = useSelector((state) =>\n    getContinentsCities(state, +id).filter((t) => !!t),\n  )\n  const plots = useSelector((state) => getContinentsPlots(state, +id))\n  const resources = useSelector((state) =>\n    getContinentResourceTotals(state, +id),\n  )\n  const unlocks = useSelector(getUnlocks)\n\n  if (!continent) {\n    return null\n  }\n\n  return (\n    <Frame\n      sidebar={\n        <Sidebar\n          uri={unlocks.includes('planet') && `#/planet/${planet.id}`}\n          linkText={unlocks.includes('planet') && `Back to ${planet.label}`}\n          label={`Continent: ${continent.label}`}\n          resources={resources}\n        />\n      }\n    >\n      <span>Cities:</span>\n\n      <Box display=\"flex\" flexDirection=\"column\">\n        {cities.map((city) => (\n          <CityItem key={city.id} city={city} />\n        ))}\n      </Box>\n\n      {plots\n        .filter((p) => typeof p.cityId !== 'number' && p.explored)\n        .map((plot) => (\n          <Box key={`${plot.id}-explore`} display=\"flex\" alignItems=\"center\">\n            <Purchase\n              continentId={+id}\n              id=\"buyCity\"\n              action={createCity({ plotId: plot.id })}\n            />\n            <Typography>{plot.biome}</Typography>\n          </Box>\n        ))}\n\n      {plots.filter((p) => !p.city && !p.explored).length > 0 && (\n        <Purchase\n          continentId={+id}\n          id=\"exploreContinent\"\n          action={explore({ continentId: continent.id })}\n        />\n      )}\n    </Frame>\n  )\n}\n\nconst CityItem = ({ city }) => (\n  <Box my={1} display=\"flex\" alignItems=\"center\">\n    <a\n      href={`#/city/${city.id}`}\n      style={{\n        marginRight: 8,\n      }}\n    >\n      {city.label}\n    </a>\n    <Resources hide resources={city.stockpiles} />\n  </Box>\n)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Box } from '@material-ui/core'\nimport { getUnlocks } from '../../shared/selectors'\nimport {\n  getPlanets,\n  getPlanetsSystem,\n  getPlanetResourceTotals,\n  getPlanetsContinents,\n} from '../selectors'\nimport {\n  getContinentResourceTotals,\n  getContinentsCities,\n} from '../../continent/selectors'\nimport { explore, settle } from '../../shared/store'\nimport { Purchase } from '../../shared/components/Purchase'\nimport { useParams } from 'react-router'\nimport { Frame, Sidebar } from '../../shared/components/Frame'\nimport { Resources } from '../../shared/components/Resources'\n\nexport const PlanetRoute = () => {\n  const { id = '0' } = useParams()\n  const planet = useSelector((state) => getPlanets(state, id))\n  const continents = useSelector((state) => getPlanetsContinents(state, id))\n  const resources = useSelector((state) => getPlanetResourceTotals(state, +id))\n  const unlocks = useSelector(getUnlocks)\n  const system = useSelector((state) => getPlanetsSystem(state, id))\n  if (!planet) {\n    return null\n  }\n\n  return (\n    <Frame\n      sidebar={\n        <Sidebar\n          uri={unlocks.includes('system') && `#/system/${system.id}`}\n          linkText={unlocks.includes('system') && `Back to ${system.label}`}\n          label={`Planet: ${planet.label}`}\n          resources={resources}\n        >\n          <span>{planet.type.id}</span>\n        </Sidebar>\n      }\n    >\n      <span>Continents:</span>\n\n      <Box display=\"flex\" flexDirection=\"column\">\n        {continents\n          .filter((c) => c.explored)\n          .map((continent) => (\n            <ContinentItem key={continent.id} continent={continent} />\n          ))}\n      </Box>\n\n      {continents.filter((c) => !c.explored).length > 0 && (\n        <Purchase\n          planetId={+id}\n          id=\"explorePlanet\"\n          action={explore({ planetId: planet.id })}\n        />\n      )}\n    </Frame>\n  )\n}\n\nconst ContinentItem = ({ continent }) => {\n  const resources = useSelector((state) =>\n    getContinentResourceTotals(state, continent.id),\n  )\n  const cities = useSelector((state) =>\n    getContinentsCities(state, continent.id).filter((t) => !!t),\n  )\n  return (\n    <Box my={1} display=\"flex\" alignItems=\"center\">\n      <a href={`#/continent/${continent.id}`} style={{ marginRight: 8 }}>\n        {continent.label}\n      </a>\n      <Resources hide resources={resources} />\n      {cities.length === 0 && (\n        <Purchase\n          id=\"settleContinent\"\n          action={settle({ continentId: continent.id })}\n        />\n      )}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Box } from '@material-ui/core'\nimport { getUnlocks } from '../../shared/selectors'\nimport {\n  getSystems,\n  getSystemPlanets,\n  getSystemResourceTotals,\n} from '../selectors'\nimport {\n  getPlanetResourceTotals,\n  getPlanetsCities,\n} from '../../planet/selectors'\nimport { explore, settle } from '../../shared/store'\nimport { Purchase } from '../../shared/components/Purchase'\nimport { useParams } from 'react-router'\nimport { Sidebar, Frame } from '../../shared/components/Frame'\nimport { Resources } from '../../shared/components/Resources'\n\nexport const SystemRoute = () => {\n  const { id = '0' } = useParams()\n  const system = useSelector((state) => getSystems(state, +id))\n  const planets = useSelector((state) => getSystemPlanets(state, +id))\n  const resources = useSelector((state) => getSystemResourceTotals(state, +id))\n  const unlocks = useSelector(getUnlocks)\n  return (\n    <Frame\n      sidebar={\n        <Sidebar\n          uri={unlocks.includes('galaxy') && `#/`}\n          linkText={unlocks.includes('galaxy') && `Back to Galaxy`}\n          label={`System: ${system.label}`}\n          resources={resources}\n        />\n      }\n    >\n      <span>Planets:</span>\n\n      <Box display=\"flex\" flexDirection=\"column\">\n        {planets\n          .filter((p) => p.explored)\n          .map((planet) => (\n            <PlanetItem key={planet.id} planet={planet} />\n          ))}\n      </Box>\n\n      {planets.filter((p) => !p.explored).length > 0 && (\n        <Purchase\n          systemId={system.id}\n          id=\"exploreContinent\"\n          action={explore({ systemId: system.id })}\n        />\n      )}\n    </Frame>\n  )\n}\n\nconst PlanetItem = ({ planet }) => {\n  const resources = useSelector((state) =>\n    getPlanetResourceTotals(state, planet.id),\n  )\n  const cities = useSelector((state) =>\n    getPlanetsCities(state, planet.id)\n      .flat(5)\n      .filter((t) => !!t),\n  )\n  return (\n    <Box my={1} display=\"flex\" alignItems=\"center\">\n      <a href={`#/planet/${planet.id}`} style={{ marginRight: 8 }}>\n        {planet.label}\n      </a>\n      <Resources hide resources={resources} />\n      {cities.length === 0 && (\n        <Purchase\n          systemId={planet.systemId}\n          id=\"settlePlanet\"\n          action={settle({ planetId: planet.id })}\n        />\n      )}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Box } from '@material-ui/core'\nimport { getResourceTotals } from '../selectors'\nimport {\n  getSystems,\n  getSystemResourceTotals,\n  getSystemsCities,\n} from '../../system/selectors'\nimport { explore, settle } from '../store'\nimport { Purchase } from './Purchase'\nimport { Frame, Sidebar } from './Frame'\nimport { Resources } from './Resources'\n\nexport const Galaxy = () => {\n  const systems = useSelector(getSystems)\n  const resources = useSelector(getResourceTotals)\n  return (\n    <Frame sidebar={<Sidebar label=\"Galaxy\" resources={resources} />}>\n      <span>Systems:</span>\n\n      <Box display=\"flex\" flexDirection=\"column\">\n        {systems\n          .filter((p) => p.explored)\n          .map((system) => (\n            <SystemItem key={system.id} system={system} />\n          ))}\n      </Box>\n\n      {systems.filter((p) => !p.explored).length > 0 && (\n        <Purchase id=\"exploreGalaxy\" action={explore()} />\n      )}\n    </Frame>\n  )\n}\n\nconst SystemItem = ({ system }) => {\n  const resources = useSelector((state) =>\n    getSystemResourceTotals(state, system.id),\n  )\n  const cities = useSelector((state) => getSystemsCities(state, system.id))\n  return (\n    <Box my={1} display=\"flex\" alignItems=\"center\">\n      <a href={`#/system/${system.id}`} style={{ marginRight: 8 }}>\n        {system.label}\n      </a>\n      <Resources hide resources={resources} />\n      {cities.length === 0 && (\n        <Purchase id=\"settleSystem\" action={settle({ systemId: system.id })} />\n      )}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { CityRoute } from './city/components/CityRoute'\nimport { ContinentRoute } from './continent/components/ContinentRoute'\nimport { PlanetRoute } from './planet/components/PlanetRoute'\nimport { SystemRoute } from './system/components/SystemRoute'\nimport { Galaxy } from './shared/components/Galaxy'\nimport { useSelector } from 'react-redux'\nimport { getUnlocks } from './shared/selectors'\n\nexport const Routes = () => {\n  const unlocks = useSelector(getUnlocks)\n\n  return (\n    <Switch>\n      {unlocks.includes('system') && (\n        <Route exact path=\"/system/:id\" render={() => <SystemRoute />} />\n      )}\n      {unlocks.includes('planet') && (\n        <Route exact path=\"/planet/:id\" render={() => <PlanetRoute />} />\n      )}\n      {unlocks.includes('continent') && (\n        <Route exact path=\"/continent/:id\" render={() => <ContinentRoute />} />\n      )}\n      <Route exact path=\"/city/:id\" render={() => <CityRoute />} />\n      <Route\n        path=\"*\"\n        render={() => {\n          if (unlocks.includes('galaxy')) return <Galaxy />\n          if (unlocks.includes('system')) return <SystemRoute />\n          if (unlocks.includes('planet')) return <PlanetRoute />\n          if (unlocks.includes('continent')) return <ContinentRoute />\n          return <CityRoute />\n        }}\n      />\n    </Switch>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport { useDispatch } from 'react-redux'\nimport { Container, Button, Box } from '@material-ui/core'\nimport { drag } from '../../city/store'\nimport { createInitial, tick } from '../store'\nimport { persistor } from '../../store'\nimport { Routes } from '../../routes'\nimport { INTERVAL } from '../../shared/data'\nexport const App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(createInitial())\n  }, [dispatch])\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      dispatch(tick())\n    }, INTERVAL)\n    return () => clearInterval(id)\n  }, [dispatch])\n\n  return (\n    <Container>\n      <DragDropContext\n        onDragEnd={({ source, destination, ...rest }) =>\n          dispatch(drag({ source, destination, ...rest }))\n        }\n      >\n        <Routes />\n        <Box position=\"fixed\" bottom={0} right={0}>\n          <Button\n            onClick={() => {\n              persistor.purge()\n              localStorage.removeItem('hasSession')\n              window.location = '/#/city/0'\n              window.location.reload()\n            }}\n          >\n            Clear save\n          </Button>\n        </Box>\n      </DragDropContext>\n    </Container>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\n\nimport store, { persistor } from './store'\n\nimport './index.css'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { App } from './shared/components/App'\n\nif (process.env.NODE_ENV === 'development') {\n  const whyDidYouRender = require('@welldone-software/why-did-you-render')\n  whyDidYouRender(React)\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}