{"version":3,"sources":["actions/index.js","models/Task.js","models/Seat.js","models/BuildingType.js","models/Building.js","models/City.js","models/Continent.js","models/Resource.js","models/Buyable.js","models/ResourceStockpile.js","models/Person.js","models/Plot.js","models/Planet.js","models/System.js","models/Unlock.js","models/index.js","data/cities.js","data/planets.js","data/systems.js","data/continents.js","data/buildingTypes.js","data/tasks.js","data/buyables.js","data/resources.js","data/index.js","reducers/createPlot.js","reducers/createContinent.js","reducers/createPlanet.js","reducers/createSystem.js","reducers/createPerson.js","reducers/createSeat.js","selectors/index.js","reducers/createBuilding.js","reducers/createCity.js","reducers/unlock.js","reducers/updateResource.js","reducers/explore.js","reducers/index.js","reducers/createInitial.js","reducers/settle.js","reducers/applyTickEffects.js","reducers/dragPerson.js","store.js","components/DragList.js","components/Seat.js","components/Purchase.js","components/Buildings.js","components/People.js","components/Resources.js","components/Frame.js","routes/City.js","routes/Continent.js","routes/Planet.js","routes/System.js","routes/Galaxy.js","routes/index.js","index.js"],"names":["createInitial","createAction","tick","drag","updateResource","explore","settle","createBuilding","createCity","createSeat","Task","Model","modelName","fields","id","attr","duration","effects","Seat","buildingId","fk","to","as","taskId","personId","BuildingType","label","tasks","Building","buildingTypeId","seats","many","City","buildings","housing","resources","people","Continent","explored","biomes","plots","Resource","Buyable","cost","ResourceStockpile","resourceId","amount","limit","Person","seat","Plot","cities","Planet","type","continents","System","planets","Unlock","orm","ORM","stateSelector","state","root","register","CITIES","PLANETS","TYPES","SYSTEMS","CONTINENTS","buildingTypes","value","random","sample","biome","buyables","wood","color","getUniqueName","model","list","takenNames","all","toRefArray","map","p","filter","includes","SYSTEM_COUNT_RANGE","PLANET_COUNT_RANGE","CONTINENT_COUNT_RANGE","PLOT_COUNT_RANGE","UNLOCKS","createPlot","sess","payload","continentId","plot","continent","withId","plotInstance","create","add","createContinent","planetId","continentOpts","planet","times","createPlanet","systemId","planetInstance","PLANET_TYPES","system","ref","createSystem","systemInstance","createPerson","cityId","person","city","personInstance","faker","name","firstName","building","seatInstance","progress","getList","toModelArray","getFirst","totalResources","forEach","stockpile","resource","getFirstDeep","thing","path","paths","split","resolved","length","shift","getUnlocks","createSelector","session","unlock","getSystems","makeGetPlanet","settled","some","getPlanets","getContinents","makeGetContinent","getCities","makeGetCity","getBuyables","getBuildingTypes","getStockpiles","getResourceTotals","_","stockpiles","getSystemResourceTotals","r","first","getPlanetResourceTotals","getContinentResourceTotals","buildingType","task","_fields","c","seatCount","buildingInstance","find","b","i","plotId","allResources","cityInstance","_resource","update","BLACKLIST","ids","remaining","getCitiesByIds","newAmount","clamp","reducers","INIT","buyable","CREATE_CONTINENT","EXPLORE","explorable","SETTLE","CREATE_CITY","CREATE_SEAT","CREATE_PERSON","CREATE_BUILDING","CREATE_PLOT","CREATE_PLANET","CREATE_SYSTEM","UPDATE_RESOURCE","TICK","updates","push","tickPeople","seatModel","effect","tickSeats","pop","growth","tickCities","DRAG","source","destination","draggableId","draggedPerson","droppableId","otherPerson","index","foundSeat","undefined","transformCircular","createTransform","inboundState","key","stringify","outboundState","parse","persistConfig","storage","stateReconciler","autoMergeLevel2","transforms","blacklist","persistedReducer","persistReducer","getEmptyState","action","reducer","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","DragList","items","props","provided","snapshot","innerRef","style","background","isDraggingOver","padding","minWidth","display","minHeight","Items","placeholder","React","memo","item","draggableProps","dragHandleProps","userSelect","marginRight","justifyContent","alignItems","textAlign","position","zIndex","isDragging","Item","progressPercent","Box","flexDirection","flex","maxWidth","backgroundColor","borderRadius","overflow","borderBottom","Typography","bgcolor","top","left","bottom","transition","transitionTimingFunction","right","m","pointerEvents","opacity","isDropDisabled","Purchase","disabled","dispatch","useDispatch","useSelector","isAffordable","useGetIsAffordable","JSON","replace","attemptPurchase","a","Promise","Object","entries","Button","onClick","totals","useGetTotals","every","targetResource","getCityResourceTotals","Buildings","unlocks","BuildingItem","taskGroups","groupBy","s","mb","BuildingTaskGroupItem","People","sort","ResourceText","data-tip","fontWeight","ml","numeral","format","Resources","hide","_resources","Array","isArray","k","v","className","my","Frame","children","sidebar","Sidebar","linkText","uri","href","useParams","CityItem","ContinentItem","PlanetItem","Galaxy","systems","SystemItem","Routes","exact","render","App","useEffect","setInterval","clearInterval","Container","onDragEnd","rest","purge","localStorage","removeItem","location","reload","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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A,UACA,SACA,YACA,WACA,cACA,YACA,YACA,YACA,WACA,WACA,UACA,SACA,YACA,YACA,aACA,YACA,UACA,WACA,UACA,WACA,SACA,UACA,YACA,WACA,aACA,aACA,cACA,cACA,WACA,UACA,SACA,UACA,WACA,WACA,YACA,aAGWC,GAAQ,CACnB,CAAEpD,GAAI,YAAayB,OAAQ,CAAC,SAAU,WAAY,SAAU,WCtDjD4B,GAAU,CACrB,YACA,SACA,OACA,WACA,SACA,MACA,QACA,SACA,SACA,SACA,iBACA,SACA,iBACA,cACA,cACA,cACA,SACA,aACA,YACA,UACA,QACA,aACA,WACA,UACA,iBACA,mBACA,kBACA,SACA,SACA,OACA,SACA,YACA,SACA,QACA,WACA,WACA,SACA,SACA,OACA,WACA,aACA,QACA,SACA,QACA,UACA,MACA,YACA,QACA,QACA,QACA,OACA,OACA,QACA,eACA,YACA,QACA,QACA,SACA,YACA,QACA,OACA,UACA,UACA,UACA,SACA,SACA,mBACA,SACA,QACA,YACA,UACA,cACA,WACA,WACA,SACA,UACA,UACA,SACA,cACA,aACA,sBACA,SACA,aACA,aACA,OACA,QACA,SACA,aCxFWC,GAAa,CACxB,QACA,UACA,UACA,SACA,SACA,SACA,aACA,YACA,aACA,cACA,UACA,OACA,OACA,SACA,WACA,UACA,UACA,WACA,aACA,aACA,SACA,SACA,QACA,SACA,SACA,OACA,YACA,YACA,YACA,YACA,OACA,OACA,SACA,WACA,SACA,UACA,aACA,aACA,aACA,YACA,QACA,QACA,QACA,WACA,SACA,SACA,UACA,YACA,WACA,WClDWC,GAAgB,CAC3B,CACEvD,GAAI,SACJY,MAAO,cACPC,MAAO,CAAC,CAAEb,GAAI,cAEhB,CAAEA,GAAI,WAAYY,MAAO,aAAcC,MAAO,CAAC,CAAEb,GAAI,UACrD,CACEA,GAAI,WACJY,MAAO,kBACPC,MAAO,CAAC,CAAEb,GAAI,QAAU,CAAEA,GAAI,UAEhC,CAAEA,GAAI,SAAUY,MAAO,YAAaC,MAAO,CA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","file":"static/js/main.7e64c846.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit'\n\nexport const createInitial = createAction('INIT')\nexport const tick = createAction('TICK')\nexport const drag = createAction('DRAG')\nexport const updateResource = createAction('UPDATE_RESOURCE')\nexport const createPerson = createAction('CREATE_PERSON')\nexport const createContinent = createAction('CREATE_CONTINENT')\nexport const explore = createAction('EXPLORE')\nexport const settle = createAction('SETTLE')\nexport const createBuilding = createAction('CREATE_BUILDING')\nexport const createCity = createAction('CREATE_CITY')\nexport const createPlanet = createAction('CREATE_PLANET')\nexport const createSystem = createAction('CREATE_SYSTEM')\nexport const createSeat = createAction('CREATE_SEAT')\nexport const unlock = createAction('UNLOCK')\n","import { Model, attr } from 'redux-orm'\nexport class Task extends Model {}\nTask.modelName = 'Task'\nTask.fields = {\n  id: attr(),\n  // how long this task takes\n  duration: attr(),\n  // what resource change happens when this task is finished {id, value}\n  effects: attr(),\n}\n","import { Model, fk } from 'redux-orm'\nexport class Seat extends Model {}\nSeat.modelName = 'Seat'\nSeat.fields = {\n  buildingId: fk({ to: 'Building', as: 'building' }),\n  taskId: fk({ to: 'Task', as: 'task' }),\n  personId: fk({ to: 'Person', as: 'person' }),\n}\n","import { Model, attr } from 'redux-orm'\nexport class BuildingType extends Model {}\nBuildingType.modelName = 'BuildingType'\nBuildingType.fields = {\n  id: attr(),\n  label: attr(),\n  // what task seats does this building have\n  tasks: attr(),\n}\n","import { Model, many, attr, fk } from 'redux-orm'\nexport class Building extends Model {}\nBuilding.modelName = 'Building'\nBuilding.fields = {\n  id: attr(),\n  buildingTypeId: fk({ to: 'BuildingType', as: 'buildingType' }),\n  seats: many('Seat', 'buildings'),\n}\n","import { Model, many, attr } from 'redux-orm'\nexport class City extends Model {}\nCity.modelName = 'City'\nCity.fields = {\n  id: attr(),\n  buildings: many('Building', 'city'),\n  housing: attr(),\n  resources: many('ResourceStockpile', 'city'),\n  people: many('Person', 'city'),\n}\n","import { Model, many, attr } from 'redux-orm'\nexport class Continent extends Model {}\nContinent.modelName = 'Continent'\nContinent.fields = {\n  id: attr(),\n  explored: attr(),\n  biomes: attr(),\n  plots: many('Plot', 'continent'),\n}\n","import { Model, attr } from 'redux-orm'\nexport class Resource extends Model {}\nResource.modelName = 'Resource'\nResource.fields = {\n  id: attr(),\n}\n","import { Model, attr } from 'redux-orm'\nexport class Buyable extends Model {}\nBuyable.modelName = 'Buyable'\nBuyable.fields = {\n  id: attr(),\n  label: attr(),\n  cost: attr(),\n}\n","import { Model, attr, fk } from 'redux-orm'\nexport class ResourceStockpile extends Model {}\nResourceStockpile.modelName = 'ResourceStockpile'\nResourceStockpile.fields = {\n  id: attr(),\n  resourceId: fk({ to: 'Resource', as: 'resource' }),\n  amount: attr(),\n  limit: attr(),\n}\n","import { Model, attr } from 'redux-orm'\nexport class Person extends Model {}\nPerson.modelName = 'Person'\nPerson.fields = {\n  id: attr(),\n  seat: attr(),\n}\n","import { Model, many, attr } from 'redux-orm'\nexport class Plot extends Model {}\n// TODO:\n// plots will provide available resources to cities\n// - Resources\n//   - size, type\n// - features\n//   - land, water, mountain, forest, desert, tundra\nPlot.modelName = 'Plot'\nPlot.fields = {\n  id: attr(),\n  cities: many('City', 'plot'),\n}\n","import { Model, many, attr } from 'redux-orm'\nexport class Planet extends Model {}\nPlanet.modelName = 'Planet'\nPlanet.fields = {\n  id: attr(),\n  type: attr(),\n  continents: many('Continent', 'planet'),\n}\n","import { Model, many, attr } from 'redux-orm'\nexport class System extends Model {}\nSystem.modelName = 'System'\nSystem.fields = {\n  id: attr(),\n  explored: attr(),\n  planets: many('Planet', 'system'),\n}\n","import { Model, attr } from 'redux-orm'\nexport class Unlock extends Model {}\nUnlock.modelName = 'Unlock'\nUnlock.fields = {\n  id: attr(),\n}\n","import { ORM } from 'redux-orm'\nimport { Task } from './Task'\nimport { Seat } from './Seat'\nimport { BuildingType } from './BuildingType'\nimport { Building } from './Building'\nimport { City } from './City'\nimport { Continent } from './Continent'\nimport { Resource } from './Resource'\nimport { Buyable } from './Buyable'\nimport { ResourceStockpile } from './ResourceStockpile'\nimport { Person } from './Person'\nimport { Plot } from './Plot'\nimport { Planet } from './Planet'\nimport { System } from './System'\nimport { Unlock } from './Unlock'\n\nconst orm = new ORM({ stateSelector: (state) => state.root })\norm.register(\n  Task,\n  Building,\n  Resource,\n  Person,\n  Planet,\n  System,\n  Unlock,\n  Plot,\n  Seat,\n  BuildingType,\n  ResourceStockpile,\n  City,\n  Buyable,\n  Continent,\n)\n\nexport default orm\n","export const CITIES = [\n  'Kilgate',\n  'Dustfair',\n  'Deadbreak',\n  'Greenscar',\n  'Silkbreak',\n  'Cragborough',\n  'Greenfrost',\n  'Snowhelm',\n  'Midacre',\n  'Fearvalley',\n  'Shadekeep',\n  'Steamvein',\n  'Tradespell',\n  'Westshell',\n  'Northreach',\n  'Fairrun',\n  'Oakenshire',\n  'Windhall',\n  'Redfrost',\n  'Glimmerborn',\n  'Redwick',\n  'Quicktown',\n  'Stormgulf',\n  'Deepgarde',\n  'Craghall',\n  'Lakeharbor',\n  'Bonehaven',\n  'Greenhand',\n  'Newshear',\n  'Puremere',\n  'Cloudwell',\n  'Oceanmoor',\n  'Rosehand',\n  'Boulderward',\n  'Sleettide',\n  'Bleakpost',\n  'Limehallow',\n  'Whalehall',\n  'Roguehelm',\n  'Knightcoast',\n  'Smoothcoast',\n  'Ebonwell',\n  'Basinfall',\n  'Winterview',\n  'Cursetide',\n  'Ravenborough',\n  'Boulderwind',\n  'Steelvale',\n  'Beachbury',\n  'Springfront',\n]\n","export const PLANETS = [\n  'Uphavis',\n  'Togrinus',\n  'Canzarvis',\n  'Xanvara',\n  'Suicury',\n  'Zopra',\n  'Cheutov',\n  'Vuyonus',\n  'Tryria BL',\n  'Moth I2W',\n  'Tachaistea',\n  'Rigrithea',\n  'Delmeshan',\n  'Chidrilia',\n  'Thahiri',\n  'Soturn',\n  'Llutetune',\n  'Mupeyama',\n  'Gillon P8E8',\n  'Phurn 8U7',\n  'Thibbunus',\n  'Tolnoavis',\n  'Modillon',\n  'Yallagua',\n  'Xiastea',\n  'Xounia',\n  'Nozacarro',\n  'Phusiyama',\n  'Dapus 6552',\n  'Llov 0310',\n  'Onnelea',\n  'Komaerus',\n  'Monnore',\n  'Thunkyke',\n  'Luamia',\n  'Keistea',\n  'Gapenides',\n  'Trodenus',\n  'Gyria 84WZ',\n  'Gnone 21SV',\n  'Runzoaclite',\n  'Bestritania',\n  'Ollilles',\n  'Yobomia',\n  'Vatune',\n  'Duistea',\n  'Drosenus',\n  'Grooruta',\n  'Chypso 75',\n  'Lion 6S1Z',\n]\n\nexport const TYPES = [\n  { id: 'earthlike', biomes: ['forest', 'mountain', 'tundra', 'plain'] },\n]\n\nexport const BIOMES = [\n  { id: 'forest' },\n  { id: 'mountain' },\n  { id: 'tundra' },\n  { id: 'plain' },\n]\n","export const SYSTEMS = [\n  'Andromeda',\n  'Antlia',\n  'Apus',\n  'Aquarius',\n  'Aquila',\n  'Ara',\n  'Aries',\n  'Auriga',\n  'Bootes',\n  'Caelum',\n  'Camelopardalis',\n  'Cancer',\n  'Canes Venatici',\n  'Canis Major',\n  'Canis Minor',\n  'Capricornus',\n  'Carina',\n  'Cassiopeia',\n  'Centaurus',\n  'Cepheus',\n  'Cetus',\n  'Chamaeleon',\n  'Circinus',\n  'Columba',\n  'Coma Berenices',\n  'Corona Australis',\n  'Corona Borealis',\n  'Corvus',\n  'Crater',\n  'Crux',\n  'Cygnus',\n  'Delphinus',\n  'Dorado',\n  'Draco',\n  'Equuleus',\n  'Eridanus',\n  'Fornax',\n  'Gemini',\n  'Grus',\n  'Hercules',\n  'Horologium',\n  'Hydra',\n  'Hydrus',\n  'Indus',\n  'Lacerta',\n  'Leo',\n  'Leo Minor',\n  'Lepus',\n  'Libra',\n  'Lupus',\n  'Lynx',\n  'Lyra',\n  'Mensa',\n  'Microscopium',\n  'Monoceros',\n  'Musca',\n  'Norma',\n  'Octans',\n  'Ophiuchus',\n  'Orion',\n  'Pavo',\n  'Pegasus',\n  'Perseus',\n  'Phoenix',\n  'Pictor',\n  'Pisces',\n  'Piscis Austrinus',\n  'Puppis',\n  'Pyxis',\n  'Reticulum',\n  'Sagitta',\n  'Sagittarius',\n  'Scorpius',\n  'Sculptor',\n  'Scutum',\n  'Serpens',\n  'Sextans',\n  'Taurus',\n  'Telescopium',\n  'Triangulum',\n  'Triangulum Australe',\n  'Tucana',\n  'Ursa Major',\n  'Ursa Minor',\n  'Vela',\n  'Virgo',\n  'Volans',\n  'Vulpecula',\n]\n","export const CONTINENTS = [\n  'Ihaes',\n  'Clopath',\n  'Prafica',\n  'Eadari',\n  'Aecoya',\n  'Auhela',\n  'Heuvruprix',\n  'Yamiuyith',\n  'Vraeholall',\n  'Wekraitruin',\n  'Shulela',\n  'Awin',\n  'Utun',\n  'Iuslos',\n  'Vleorath',\n  'Miogaes',\n  'Iyuagea',\n  'Aibutend',\n  'Jiodrefias',\n  'Breidimune',\n  'Fohira',\n  'Drafos',\n  'Owios',\n  'Euyune',\n  'Aebran',\n  'Ogoa',\n  'Cuslaizor',\n  'Sledaudon',\n  'Iakeheron',\n  'Tiukunoth',\n  'Ulul',\n  'Olix',\n  'Vlizos',\n  'Drowrand',\n  'Eikrin',\n  'Eucrora',\n  'Sleiqiseth',\n  'Klaepimuin',\n  'Yaibrohall',\n  'Griufowos',\n  'Hotox',\n  'Amela',\n  'Egela',\n  'Traphith',\n  'Eubres',\n  'Heacax',\n  'Eohipor',\n  'Qaeshufix',\n  'Iazulela',\n  'Aewimix',\n]\n","export const buildingTypes = [\n  {\n    id: 'center',\n    label: 'City Center',\n    tasks: [{ id: 'scavenge' }],\n  },\n  { id: 'barracks', label: 'Encampment', tasks: [{ id: 'hunt' }] },\n  {\n    id: 'industry',\n    label: 'Industrial Zone',\n    tasks: [{ id: 'mine' }, { id: 'chop' }],\n  },\n  { id: 'church', label: 'Holy Site', tasks: [{ id: 'pray' }] },\n  { id: 'campus', label: 'Campus', tasks: [{ id: 'study' }] },\n  { id: 'market', label: 'Commercial Hub', tasks: [{ id: 'trade' }] },\n  { id: 'theatre', label: 'Theatre Square', tasks: [{ id: 'perform' }] },\n]\n","import random from 'lodash/random'\nimport sample from 'lodash/sample'\n\nexport const tasks = [\n  {\n    id: 'scavenge',\n    duration: 1,\n    effects: [\n      { id: 'food', value: random(1, 4) },\n      { id: 'wood', value: () => sample([0, 0, 0, 0.1, 0.2]) },\n    ],\n  },\n  {\n    id: 'chop',\n    biome: ['forest'],\n    duration: 1,\n    effects: [{ id: 'wood', value: 1 }],\n  },\n  {\n    id: 'farm',\n    biome: ['plain'],\n    duration: 1,\n    effects: [{ id: 'food', value: 10 }],\n  },\n  {\n    id: 'mine',\n    biome: ['mountain'],\n    duration: 1,\n    effects: [{ id: 'stone', value: 1 }],\n  },\n  { id: 'pray', duration: 1, effects: [{ id: 'faith', value: 1 }] },\n  { id: 'hunt', duration: 1, effects: [{ id: 'fur', value: 1 }] },\n  { id: 'trade', duration: 1, effects: [{ id: 'gold', value: 1 }] },\n  { id: 'perform', duration: 1, effects: [{ id: 'culture', value: 1 }] },\n  { id: 'study', duration: 1, effects: [{ id: 'science', value: 1 }] },\n  1,\n]\n","export const buyables = [\n  {\n    id: 'buySeat',\n    label: '+ seat',\n    cost: { wood: 10 },\n  },\n  {\n    id: 'createBuilding',\n    label: '+ building',\n    cost: { wood: 50 },\n  },\n  {\n    id: 'buyCity',\n    label: '+ city',\n    cost: { wood: 100 },\n  },\n  {\n    id: 'exploreContinent',\n    label: 'explore',\n    cost: { wood: 1000 },\n  },\n  {\n    id: 'settleContinent',\n    label: 'settle continent',\n    cost: { wood: 500 },\n  },\n  {\n    id: 'explorePlanet',\n    label: 'explore ocean',\n    cost: { wood: 10000 },\n  },\n  {\n    id: 'settlePlanet',\n    label: 'settle planet',\n    cost: { wood: 5000 },\n  },\n  {\n    id: 'exploreSystem',\n    label: 'explore stars',\n    cost: { wood: 100000 },\n  },\n  {\n    id: 'settleSystem',\n    label: 'settle system',\n    cost: { wood: 50000 },\n  },\n  {\n    id: 'exploreGalaxy',\n    label: 'explore systems',\n    cost: { wood: 1000000 },\n  },\n]\n","export const resources = [\n  { id: 'food', limit: 500, color: '#f95757' },\n  { id: 'wood', limit: 100, color: '#905100' },\n  { id: 'fur', limit: 100, color: '#d0865b' },\n  { id: 'stone', limit: 100, color: '#8a8a8a' },\n  { id: 'faith', limit: 100, color: '#9093ff' },\n  { id: 'gold', limit: 100, color: '#f1ba1a' },\n  { id: 'science', limit: 100, color: '#090eb5' },\n  { id: 'culture', limit: 100, color: '#ab16c5' },\n  { id: 'growth', limit: 100, color: '#000000' },\n]\n","import sample from 'lodash/sample'\nexport { CITIES } from './cities'\nexport { PLANETS, TYPES as PLANET_TYPES } from './planets'\nexport { SYSTEMS } from './systems'\nexport { CONTINENTS } from './continents'\nexport { buildingTypes } from './buildingTypes'\nexport { tasks } from './tasks'\nexport { buyables } from './buyables'\nexport { resources } from './resources'\n\nexport const getUniqueName = (model, list) => {\n  const takenNames = model\n    .all()\n    .toRefArray()\n    .map((p) => p.label)\n  return sample(list.filter((p) => !takenNames.includes(p)))\n}\n\nexport const INTERVAL = 500\nexport const RESOURCE_MULTIPLIER = 500\nexport const UNLOCK_ALL = true\n\nexport const SYSTEM_COUNT_RANGE = [3, 3]\nexport const PLANET_COUNT_RANGE = [2, 5]\nexport const CONTINENT_COUNT_RANGE = [2, 4]\nexport const PLOT_COUNT_RANGE = [2, 6]\nexport const FOOD_DRAIN = 0.2\n\nexport const UNLOCKS = [\n  'food',\n  'wood',\n  'fur',\n  'stone',\n  'faith',\n  'gold',\n  'science',\n  'culture',\n  'center',\n  'scavenge',\n  'barracks',\n  'hunt',\n  'industry',\n  'mine',\n  'chop',\n  'church',\n  'pray',\n  'campus',\n  'study',\n  'market',\n  'trade',\n  'theatre',\n  'perform',\n  'galaxy',\n  'system',\n  'planet',\n  'continent',\n]\n","import sample from 'lodash/sample'\n\nexport const createPlot = (sess, payload = {}) => {\n  const { continentId, ...plot } = payload\n  const continent = sess.Continent.withId(continentId)\n  const plotInstance = sess.Plot.create({\n    ...plot,\n    biome: sample(continent.biomes),\n  })\n  continent.plots.add(plotInstance)\n  return sess.state\n}\n","import times from 'lodash/times'\nimport random from 'lodash/random'\nimport { CONTINENTS, getUniqueName } from '../data'\nimport { createPlot } from './createPlot'\nimport { PLOT_COUNT_RANGE } from '../data'\n\nexport const createContinent = (sess, payload = {}) => {\n  const {\n    planetId,\n    label = getUniqueName(sess.Continent, CONTINENTS),\n    ...continentOpts\n  } = payload\n  const planet = sess.Planet.withId(planetId)\n  const continent = sess.Continent.create({\n    ...continentOpts,\n    explored: false,\n    biomes: planet.type.biomes,\n    label,\n  })\n  planet.continents.add(continent)\n  times(random(...PLOT_COUNT_RANGE), () =>\n    createPlot(sess, { continentId: continent.id }),\n  )\n  return sess.state\n}\n","import random from 'lodash/random'\nimport sample from 'lodash/sample'\nimport times from 'lodash/times'\nimport { createContinent } from './createContinent'\nimport {\n  PLANETS,\n  PLANET_TYPES,\n  getUniqueName,\n  CONTINENT_COUNT_RANGE,\n} from '../data'\n\nexport const createPlanet = (sess, payload = {}) => {\n  const { systemId, ...planet } = payload\n  const planetInstance = sess.Planet.create({\n    ...planet,\n    type: sample(PLANET_TYPES),\n    label: getUniqueName(sess.Planet, PLANETS),\n  })\n  const system = sess.System.withId(systemId)\n  system.planets.add(planetInstance)\n  times(random(...CONTINENT_COUNT_RANGE), () =>\n    createContinent(sess, { planetId: planetInstance.ref.id }),\n  )\n\n  return sess.state\n}\n","import random from 'lodash/random'\nimport times from 'lodash/times'\nimport { createPlanet } from './createPlanet'\nimport { SYSTEMS, getUniqueName, PLANET_COUNT_RANGE } from '../data'\n\nexport const createSystem = (sess, planet = {}) => {\n  const systemInstance = sess.System.create({\n    ...planet,\n    explored: false,\n    label: getUniqueName(sess.System, SYSTEMS),\n  })\n  times(random(...PLANET_COUNT_RANGE), () =>\n    createPlanet(sess, { systemId: systemInstance.ref.id }),\n  )\n\n  return sess.state\n}\n","import faker from 'faker'\nexport const createPerson = (sess, { cityId, person }) => {\n  const city = sess.City.withId(cityId)\n  const personInstance = sess.Person.create({\n    label: faker.name.firstName(),\n    ...person,\n  })\n  city.people.add(personInstance)\n  return sess.state\n}\n","export const createSeat = (sess, { buildingId, taskId }) => {\n  const building = sess.Building.withId(buildingId)\n  const seatInstance = sess.Seat.create({\n    progress: 0,\n    taskId,\n  })\n  building.seats.add(seatInstance)\n  return sess.state\n}\n","import { createSelector } from 'redux-orm'\nimport orm from '../models'\n\nexport const getList = (model) => {\n  if (!model) debugger\n  return model.all().toModelArray()\n}\n\nexport const getRefList = (model) => {\n  if (!model) debugger\n  return model.all().toRefArray()\n}\n\nexport const getFirst = (model) => getList(model)[0]\n\nconst totalResources = (list) => {\n  let resources = {}\n  list.forEach((stockpile) => {\n    const { ref } = stockpile\n    resources[ref.resourceId] = resources[ref.resourceId] || {\n      amount: 0,\n      limit: 0,\n      color: stockpile.resource && stockpile.resource.color,\n    }\n    resources[ref.resourceId].amount += ref.amount\n    resources[ref.resourceId].limit += ref.limit\n  })\n  return resources\n}\n\nexport const getFirstDeep = (thing, path) => {\n  const paths = path.split('.')\n  let resolved = thing\n  while (paths.length > 0) {\n    const p = paths.shift()\n    resolved = getFirst(resolved[p])\n  }\n  return resolved\n}\n\nexport const getUnlocks = createSelector(orm, (session) =>\n  getList(session.Unlock).map((unlock) => unlock.ref.id),\n)\n\nexport const getSystems = createSelector(orm, (session) =>\n  getList(session.System).map((system) => {\n    const planets = getList(system.planets).map((planet) =>\n      makeGetPlanet(session, planet),\n    )\n    return {\n      ...system.ref,\n      settled: planets.some((p) => p.settled),\n      planets,\n    }\n  }),\n)\n\nexport const getPlanets = createSelector(orm, (session) =>\n  getList(session.Planet).map((planet) => makeGetPlanet(session, planet)),\n)\n\nexport const getContinents = createSelector(orm, (session) =>\n  getList(session.Continent).map((continent) =>\n    makeGetContinent(session, continent),\n  ),\n)\n\nexport const getCities = createSelector(orm, (session) =>\n  getList(session.City).map((city) => makeGetCity(session, city)),\n)\n\nexport const getBuyables = createSelector(orm, (session) =>\n  session.Buyable.all().toRefArray(),\n)\n\nexport const getBuildingTypes = createSelector(orm, (session) =>\n  getList(session.BuildingType),\n)\n\nexport const getStockpiles = createSelector(orm, (session) =>\n  getList(session.ResourceStockpile),\n)\n\nexport const getResourceTotals = createSelector(\n  orm,\n  getStockpiles,\n  (_, stockpiles) => totalResources(stockpiles),\n)\n\nexport const getSystemResourceTotals = (systemId) =>\n  createSelector(orm, getStockpiles, (_, stockpiles) =>\n    totalResources(\n      stockpiles.filter((r) => r.city.first().systemId === systemId),\n    ),\n  )\n\nexport const getPlanetResourceTotals = (planetId) =>\n  createSelector(orm, getStockpiles, (_, stockpiles) =>\n    totalResources(\n      stockpiles.filter((r) => r.city.first().planetId === planetId),\n    ),\n  )\n\nexport const getContinentResourceTotals = (continentId) =>\n  createSelector(orm, getStockpiles, (_, stockpiles) =>\n    totalResources(\n      stockpiles.filter((r) => r.city.first().continentId === continentId),\n    ),\n  )\n\nexport const getCityResourceTotals = (cityId) =>\n  createSelector(orm, getStockpiles, (_, stockpiles) =>\n    totalResources(stockpiles.filter((r) => r.city.first().id === cityId)),\n  )\n\nconst makeGetContinent = (session, continent) => ({\n  explored: false,\n  ...continent.ref,\n  planet: getFirst(continent.planet.all()).ref,\n  plots: getList(continent.plots).map((p) => ({\n    id: p.id,\n    city: getFirst(p.cities),\n    ...p.ref,\n  })),\n  settled:\n    getList(continent.plots)\n      .map((p) => getFirst(p.cities))\n      .filter((p) => !!p).length > 0,\n  cities: getList(continent.plots)\n    .map((p) => getFirst(p.cities))\n    .filter((p) => !!p)\n    .map((city) => makeGetCity(session, city)),\n})\n\nconst makeGetCity = (sess, city) => ({\n  ...city.ref,\n  people: city.people.toRefArray(),\n  resources: getList(city.resources).map((r) => ({\n    ...r.ref,\n    color: sess.Resource.withId(r.resourceId)\n      ? sess.Resource.withId(r.resourceId).ref.color\n      : null,\n  })),\n  plot: getFirst(city.plot).ref,\n  continent: getFirst(getFirst(city.plot).continent).ref,\n  buildings: getList(city.buildings).map((building) => {\n    const buildingType = sess.BuildingType.withId(building.buildingTypeId)\n    return {\n      ...building.ref,\n      label: buildingType ? buildingType.label : null,\n      seats: building.seats.toRefArray().map((seat) => ({\n        ...seat,\n        task: sess.Task.withId(seat.taskId)\n          ? sess.Task.withId(seat.taskId).ref\n          : null,\n        building: { ...building.ref, cityId: city.id },\n        person: seat.person ? { ...seat.person._fields } : null,\n      })),\n    }\n  }),\n})\n\nconst makeGetPlanet = (session, planet) => {\n  const continents = getList(planet.continents).map((continent) =>\n    makeGetContinent(session, continent),\n  )\n  return {\n    ...planet.ref,\n    settled: continents.some((c) => c.settled),\n    system: getFirst(planet.system).ref,\n    continents,\n  }\n}\n","import { createSeat } from './createSeat'\nimport { getList } from '../selectors'\nexport const createBuilding = (sess, payload) => {\n  const { cityId, buildingTypeId, seatCount, ...building } = payload\n  const city = sess.City.withId(cityId)\n  const buildingInstance = sess.Building.create({ buildingTypeId, ...building })\n  let buildingType = getList(sess.BuildingType).find(\n    (b) => b.id === buildingTypeId,\n  )\n  buildingType.tasks.forEach((task) => {\n    let i = seatCount || 1\n    while (i-- > 0) {\n      createSeat(sess, { buildingId: buildingInstance.id, taskId: task.id })\n    }\n  })\n  city.buildings.add(buildingInstance)\n\n  return sess.state\n}\n","import { createPerson } from './createPerson'\nimport { createBuilding } from './createBuilding'\nimport { CITIES, getUniqueName, RESOURCE_MULTIPLIER } from '../data'\nimport { getFirst } from '../selectors'\n\nexport const createCity = (sess, payload) => {\n  const {\n    plotId,\n    label = getUniqueName(sess.City, CITIES),\n    people = [{}],\n  } = payload\n\n  const plot = sess.Plot.withId(plotId)\n  const allResources = sess.Resource.all().toModelArray()\n  const continent = getFirst(plot.continent)\n  const planet = getFirst(continent.planet)\n  const system = getFirst(planet.system)\n  const cityInstance = sess.City.create({\n    label,\n    housing: 5,\n    continentId: continent.id,\n    planetId: planet.id,\n    systemId: system.id,\n  })\n  const cityId = cityInstance.ref.id\n\n  allResources.forEach(({ id }) => {\n    const _resource = sess.Resource.withId(id)\n    const amount = _resource ? _resource.ref.amount : 0\n    const _limit = _resource ? _resource.ref.limit : 100\n    const limit = _limit * RESOURCE_MULTIPLIER\n    cityInstance.resources.add(\n      sess.ResourceStockpile.create({ resourceId: id, amount, limit }),\n    )\n  })\n  people.forEach((person) => createPerson(sess, { cityId, person }))\n  createBuilding(sess, { cityId, buildingTypeId: 'center' })\n\n  plot.update({ explored: true })\n  continent.update({ explored: true })\n  planet.update({ explored: true })\n  system.update({ explored: true })\n  plot.cities.add(cityInstance)\n\n  return sess.state\n}\n","const BLACKLIST = ['growth']\nexport const unlock = (sess, payload = {}) => {\n  if (!sess.Unlock.withId(payload) && !BLACKLIST.includes(payload)) {\n    sess.Unlock.create({ id: payload })\n  }\n  return sess.state\n}\n","import clamp from 'lodash/clamp'\nimport { getFirstDeep, getList } from '../selectors'\nimport { unlock } from './unlock'\n\nexport function updateResource(sess, { resourceId: id, value, ...ids }) {\n  if (value === 0) return sess.state\n\n  unlock(sess, id)\n\n  let remaining = value\n  getList(sess.City)\n    .filter(getCitiesByIds({ ...ids }))\n    .forEach((city) => {\n      const resource = getList(city.resources).find(\n        ({ ref }) => ref.resourceId === id,\n      )\n      let { amount, limit } = resource.ref\n      const newAmount = clamp(amount + remaining, 0, limit)\n      remaining = amount + remaining - newAmount\n      resource.update({ amount: newAmount })\n    })\n\n  return sess.state\n}\n\nconst getCitiesByIds = ({ systemId, planetId, continentId, cityId }) => (c) => {\n  if (systemId) {\n    const system = getFirstDeep(c, 'plot.continent.planet.system')\n    return system.id === +systemId\n  }\n  if (planetId) {\n    const planet = getFirstDeep(c, 'plot.continent.planet')\n    return planet.id === +planetId\n  }\n  if (continentId) {\n    const continent = getFirstDeep(c, 'plot.continent')\n    return continent.id === +continentId\n  }\n  if (cityId) {\n    return c.id === +cityId\n  }\n  return true\n}\n","import { getList } from '../selectors'\n\nexport const explore = (sess, payload = {}) => {\n  const { systemId, planetId, continentId } = payload\n  let explorable\n  if (typeof systemId === 'number') {\n    const system = sess.System.withId(systemId)\n    explorable = getList(system.planets).filter((c) => !c.explored)[0]\n  } else if (typeof planetId === 'number') {\n    const planet = sess.Planet.withId(planetId)\n    explorable = getList(planet.continents).filter((c) => !c.explored)[0]\n  } else if (typeof continentId === 'number') {\n    const continent = sess.Continent.withId(continentId)\n    explorable = getList(continent.plots).filter((p) => !p.explored)[0]\n  } else {\n    explorable = getList(sess.System).filter((p) => !p.explored)[0]\n  }\n  explorable.update({ explored: true })\n  return sess.state\n}\n","import orm from '../models'\nimport { createInitial } from './createInitial'\nimport { dragPerson } from './dragPerson'\nimport { applyTickEffects } from './applyTickEffects'\nimport { updateResource } from './updateResource'\nimport { createSeat } from './createSeat'\nimport { createPerson } from './createPerson'\nimport { createPlanet } from './createPlanet'\nimport { createCity } from './createCity'\nimport { createContinent } from './createContinent'\nimport { createBuilding } from './createBuilding'\nimport { createPlot } from './createPlot'\nimport { explore } from './explore'\nimport { settle } from './settle'\nimport { createSystem } from './createSystem'\n\nconst reducers = {\n  INIT: createInitial,\n  CREATE_CONTINENT: createContinent,\n  EXPLORE: explore,\n  SETTLE: settle,\n  CREATE_CITY: createCity,\n  CREATE_SEAT: createSeat,\n  CREATE_PERSON: createPerson,\n  CREATE_BUILDING: createBuilding,\n  CREATE_PLOT: createPlot,\n  CREATE_PLANET: createPlanet,\n  CREATE_SYSTEM: createSystem,\n  UPDATE_RESOURCE: updateResource,\n  TICK: applyTickEffects,\n  DRAG: dragPerson,\n}\n\nexport const reducer = (state = orm.getEmptyState(), action) => {\n  const reducer = reducers[action.type]\n  if (reducer) {\n    return reducer(orm.session(state), action.payload)\n  }\n  return state\n}\n","import random from 'lodash/random'\nimport times from 'lodash/times'\nimport { SYSTEM_COUNT_RANGE, UNLOCKS, UNLOCK_ALL } from '../data'\nimport { resources, tasks, buildingTypes, buyables } from '../data'\nimport { createSystem } from './createSystem'\nimport { createCity } from './createCity'\nimport { updateResource } from './updateResource'\nimport { unlock } from './unlock'\nimport { getFirst } from '../selectors'\n\nexport const createInitial = (sess) => {\n  buyables.forEach((buyable) => sess.Buyable.create({ ...buyable }))\n  resources.forEach((resource) =>\n    sess.Resource.create({ ...resource, amount: 0 }),\n  )\n  tasks.forEach((task) => sess.Task.create({ ...task }))\n  buildingTypes.forEach(({ ...buildingType }) =>\n    sess.BuildingType.create({ ...buildingType }),\n  )\n\n  if (sess.System.all().toRefArray().length === 0) {\n    times(random(...SYSTEM_COUNT_RANGE), () => createSystem(sess, {}))\n    // create first city\n    createCity(sess, { plotId: getFirst(sess.Plot).id })\n    unlock(sess, 'center')\n    updateResource(sess, { resourceId: 'food', cityId: 0, value: 100 })\n\n    if (UNLOCK_ALL) {\n      UNLOCKS.forEach((id) => unlock(sess, id))\n    }\n  }\n\n  return sess.state\n}\n","import { createCity } from './createCity'\nimport { getFirst, getFirstDeep } from '../selectors'\n\nexport const settle = (sess, payload = {}) => {\n  const { systemId, planetId, continentId } = payload\n  let plotId\n  if (typeof systemId === 'number') {\n    const system = sess.System.withId(systemId)\n    const plot = getFirstDeep(system, 'planets.continents.plots')\n    plotId = plot.id\n  } else if (typeof planetId === 'number') {\n    const planet = sess.Planet.withId(planetId)\n    const plot = getFirstDeep(planet, 'continents.plots')\n    plotId = plot.id\n  } else if (typeof continentId === 'number') {\n    const continent = sess.Continent.withId(continentId)\n    const plot = getFirst(continent.plots)\n    plotId = plot.id\n  }\n  createCity(sess, { plotId })\n  return sess.state\n}\n","import { RESOURCE_MULTIPLIER, FOOD_DRAIN } from '../data'\nimport { updateResource } from './updateResource'\nimport { getFirst, getList } from '../selectors'\nimport { createPerson } from './createPerson'\n\nexport const applyTickEffects = (sess) => {\n  let updates = []\n  tickPeople(sess, updates)\n\n  tickSeats(sess, updates)\n\n  tickCities(sess, updates)\n\n  updates.forEach((update) => updateResource(sess, update))\n\n  return sess.state\n}\n\nfunction tickCities(sess, updates) {\n  getList(sess.City).forEach((city) => {\n    const pop = city.people.all().toRefArray().length\n    const growth = city.resources\n      .all()\n      .toRefArray()\n      .find((r) => r.resourceId === 'growth')\n    if (pop < city.housing) {\n      updates.push({\n        resourceId: 'growth',\n        cityId: city.id,\n        value: 1,\n      })\n      if (growth && growth.amount >= 5) {\n        createPerson(sess, { cityId: city.id })\n        updates.push({\n          resourceId: 'growth',\n          cityId: city.id,\n          value: -5,\n        })\n      }\n    }\n  })\n}\n\nfunction tickPeople(sess, updates) {\n  //TODO: this should reduce to array of cities being updated\n\n  getList(sess.Person).forEach(({ city }) => {\n    updates.push({\n      resourceId: 'food',\n      cityId: getFirst(city).id,\n      value: -FOOD_DRAIN,\n    })\n  })\n}\n\nfunction tickSeats(sess, updates) {\n  getList(sess.Seat).forEach((seatModel) => {\n    const seat = seatModel.ref\n    const building = getFirst(seatModel.buildings)\n    const { effects, duration } = sess.Task.withId(seat.taskId).ref\n    const cityId = building.city.all().toRefArray()[0].id\n    if (seat.progress >= duration) {\n      effects.forEach((effect) => {\n        const resourceId = effect.id\n        let value = effect.value\n        if (typeof value === 'function') {\n          value = value()\n        }\n        value = value * RESOURCE_MULTIPLIER\n        updates.push({ resourceId, value, cityId })\n      })\n      return seatModel.update({ progress: 0 })\n    }\n    seatModel.update({\n      progress: seat.person ? seat.progress + 1 : seat.progress,\n    })\n  })\n}\n","import { getList } from '../selectors'\n\nexport const dragPerson = (sess, { source, destination, draggableId }) => {\n  // NICE: add swapping\n  if (!destination) {\n    return sess.state\n  }\n  let draggedPerson = getList(sess.Person).find(\n    (person) => `${person.id}` === draggableId,\n  )\n  if (source.droppableId === destination.droppableId) {\n    let otherPerson = getList(sess.Person).find(\n      (person) => person._fields.index === destination.index,\n    )\n    draggedPerson &&\n      draggedPerson.update({\n        index: destination.index,\n      })\n    otherPerson && otherPerson.update({ index: source.index })\n  } else {\n    let foundSeat = sess.Seat.withId(destination.droppableId.split('-')[1])\n    if (draggedPerson.seat) {\n      let currentSeat = sess.Seat.withId(draggedPerson.seat.id)\n      currentSeat.update({ person: undefined })\n    }\n    if (foundSeat) {\n      draggedPerson.update({ seat: foundSeat })\n      foundSeat.update({ person: draggedPerson })\n    } else {\n      draggedPerson.update({ seat: undefined })\n    }\n  }\n  return sess.state\n}\n","import { createStore, combineReducers } from 'redux'\nimport { reducer } from './reducers'\nimport { persistStore, persistReducer, createTransform } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\nimport { parse, stringify } from 'flatted'\n\nconst CONSTANT_MODELS = ['BuildingType', 'Resource', 'Task', 'Buyable']\nconst transformCircular = createTransform(\n  (inboundState, key) => stringify(inboundState),\n  (outboundState, key) => parse(outboundState),\n)\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: autoMergeLevel2,\n  transforms: [transformCircular],\n  blacklist: CONSTANT_MODELS,\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\nconst rootReducer = combineReducers({ root: persistedReducer })\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n)\nexport const persistor = persistStore(store)\n\nexport default store\n","import React from 'react'\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\n\nexport const DragList = ({ items, ...props }) => (\n  <Droppable {...props}>\n    {(provided, snapshot) => (\n      <div\n        ref={provided.innerRef}\n        style={{\n          background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n          padding: 8,\n          minWidth: 60,\n          display: 'flex',\n          minHeight: 55,\n        }}\n      >\n        <Items items={items} />\n        {provided.placeholder}\n      </div>\n    )}\n  </Droppable>\n)\n\nconst Items = React.memo(({ items }) =>\n  items.map((item, index) => (\n    <Draggable key={item.id + index} draggableId={`${item.id}`} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={{\n            userSelect: 'none',\n            padding: 8,\n            marginRight: 8,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            minHeight: 40,\n            textAlign: 'center',\n            position: 'relative',\n            zIndex: snapshot.isDragging ? 20 : 1,\n            background: snapshot.isDragging ? 'lightgreen' : 'grey',\n            ...provided.draggableProps.style,\n          }}\n        >\n          <Item item={item} index={index} />\n        </div>\n      )}\n    </Draggable>\n  )),\n)\n\nconst Item = React.memo((props) => <span>{props.item.label}</span>)\n","import React from 'react'\nimport { Box, Typography } from '@material-ui/core'\nimport { DragList } from './DragList'\nimport { INTERVAL } from '../data'\n\nconst Seat = ({ seat }) => {\n  const progressPercent = 1 - seat.progress / seat.task.duration\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" flex={1} maxWidth={90}>\n      <Box\n        style={{\n          flex: 1,\n          marginRight: 8,\n          position: 'relative',\n          backgroundColor: 'lightgray',\n          borderRadius: 4,\n          overflow: 'hidden',\n        }}\n      >\n        <Box position=\"relative\">\n          <Box position=\"relative\" style={{ borderBottom: '1px solid #999' }}>\n            <Typography\n              style={{ textAlign: 'center', position: 'relative', zIndex: 2 }}\n            >\n              {seat.task.id}\n            </Typography>\n\n            {typeof progressPercent === 'number' && (\n              <Box\n                position=\"absolute\"\n                bgcolor=\"green\"\n                top={0}\n                left={0}\n                bottom={0}\n                style={{\n                  transition: `right ${INTERVAL}ms`,\n                  transitionTimingFunction: 'linear',\n                  zIndex: 1,\n                }}\n                right={`${progressPercent * 100}%`}\n              />\n            )}\n          </Box>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <Box minHeight={56} position=\"relative\" m={1}>\n              <Box\n                position=\"absolute\"\n                bgcolor=\"gray\"\n                top={0}\n                left={0}\n                right={0}\n                bottom={0}\n                style={{\n                  pointerEvents: 'none',\n                  opacity: 0.3,\n                  zIndex: 1,\n                }}\n              />\n              <DragList\n                droppableId={`seat-${seat.id}`}\n                isDropDisabled={!!seat.person}\n                items={seat.person ? [seat.person] : []}\n              />\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport { Seat }\n","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  getBuyables,\n  getContinentResourceTotals,\n  getPlanetResourceTotals,\n  getCityResourceTotals,\n  getResourceTotals,\n  getSystemResourceTotals,\n} from '../selectors'\nimport { updateResource } from '../actions'\n\nexport const Purchase = ({ id, label, action, disabled, ...ids }) => {\n  const dispatch = useDispatch()\n  const buyables = useSelector(getBuyables)\n  const buyable = buyables.find((b) => b.id === id)\n  const isAffordable = useGetIsAffordable({ buyable, ...ids })\n  if (!buyable) {\n    return null\n  }\n  const cost = JSON.stringify(buyable.cost)\n    .replace(/\"/g, '')\n    .replace(/\\{|\\}/g, '')\n\n  const attemptPurchase = async () => {\n    if (!disabled && isAffordable) {\n      await Promise.all(\n        Object.entries(buyable.cost).map(([resourceId, value]) =>\n          dispatch(updateResource({ resourceId, value: -value, ...ids })),\n        ),\n      )\n      await dispatch(action)\n    }\n  }\n\n  return (\n    <Button\n      onClick={attemptPurchase}\n      style={{ display: 'block', opacity: !disabled && isAffordable ? 1 : 0.5 }}\n    >\n      {label || buyable.label} ({cost})\n    </Button>\n  )\n}\n\nconst useGetIsAffordable = ({ buyable, ...ids }) => {\n  const totals = useGetTotals(ids)\n  if (!buyable) return false\n  return Object.entries(buyable.cost).every(([key, value]) => {\n    const targetResource = Object.entries(totals)\n      .map(([resourceId, { amount }]) => ({ resourceId, amount: amount }))\n      .find((r) => r.resourceId === key)\n\n    if (!targetResource) {\n      return false\n    }\n\n    return value <= targetResource.amount ? targetResource.amount : 0\n  })\n}\n\nconst useGetTotals = ({ cityId, continentId, planetId, systemId }) =>\n  useSelector((state) => {\n    if (typeof cityId === 'number') {\n      return getCityResourceTotals(+cityId)(state)\n    }\n    if (typeof continentId === 'number') {\n      return getContinentResourceTotals(+continentId)(state)\n    }\n    if (typeof planetId === 'number') {\n      return getPlanetResourceTotals(+planetId)(state)\n    }\n    if (typeof systemId === 'number') {\n      return getSystemResourceTotals(+systemId)(state)\n    }\n\n    return getResourceTotals(state)\n  })\n","import React from 'react'\nimport { Typography, Box } from '@material-ui/core'\nimport { Seat } from './Seat'\nimport { Purchase } from './Purchase'\nimport { createSeat, createBuilding } from '../actions'\nimport groupBy from 'lodash/groupBy'\nimport { useSelector } from 'react-redux'\nimport { getBuildingTypes, getUnlocks } from '../selectors'\n\nexport const Buildings = ({ continentId, cityId, buildings }) => {\n  const unlocks = useSelector(getUnlocks)\n  const buildingTypes = useSelector(getBuildingTypes).filter(\n    (b) => !buildings.map((b) => b.buildingTypeId).includes(b.id),\n  )\n  return (\n    <Box>\n      {buildings\n        .filter((b) => unlocks.includes(b.buildingTypeId))\n        .map((building) => (\n          <BuildingItem\n            key={`building-${building.id}`}\n            building={building}\n            continentId={continentId}\n            cityId={cityId}\n          />\n        ))}\n      {buildingTypes\n        .filter((b) => unlocks.includes(b.buildingTypeId))\n        .map((buildingType) => (\n          <Purchase\n            key={buildingType.id}\n            id=\"createBuilding\"\n            label={`buy ${buildingType.label}`}\n            cityId={+cityId}\n            action={createBuilding({ cityId, buildingTypeId: buildingType.id })}\n          />\n        ))}\n    </Box>\n  )\n}\n\nconst BuildingItem = (props) => {\n  const taskGroups = groupBy(\n    props.building.seats.filter((s) => !!s.task),\n    (seat) => seat.task.id,\n  )\n  return (\n    <Box mb={3}>\n      <Typography>{props.building.label}</Typography>\n\n      {Object.entries(taskGroups).map(([taskId, seats], index) => (\n        <BuildingTaskGroupItem\n          key={taskId}\n          taskId={taskId}\n          seats={seats}\n          index={index}\n          id={props.building.id}\n          continentId={props.continentId}\n          cityId={props.cityId}\n        />\n      ))}\n    </Box>\n  )\n}\n\nconst BuildingTaskGroupItem = (props) => (\n  <Box display=\"flex\">\n    {props.seats.map((seat) => (\n      <Seat key={`task${seat.id}`} index={props.index} seat={seat} />\n    ))}\n\n    <Purchase\n      continentId={+props.continentId}\n      id=\"buySeat\"\n      cityId={+props.cityId}\n      action={createSeat({\n        buildingId: props.id,\n        taskId: props.taskId,\n      })}\n    />\n  </Box>\n)\n","import React from 'react'\nimport { DragList } from './DragList'\n\nexport const People = ({ continentId, cityId, people }) => (\n  <>\n    <DragList\n      droppableId=\"people\"\n      items={people.filter((p) => !p.seat).sort((a, b) => a.index - b.index)}\n    />\n  </>\n)\n","import React from 'react'\nimport numeral from 'numeral'\nimport { Box, Typography } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { getUnlocks } from '../selectors'\nimport ReactTooltip from 'react-tooltip'\n\n// TODO: needs to get color properly\nexport const ResourceText = ({ resource }) => {\n  return (\n    <Box data-tip={resource.resourceId} display=\"flex\">\n      <Box>\n        <Typography style={{ color: resource.color, fontWeight: 'bold' }}>\n          {resource.resourceId}:\n        </Typography>\n      </Box>\n      <Box ml={1} display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        <Typography>\n          {numeral(resource.amount).format('0,0.0')}/\n          {numeral(resource.limit).format('0,0')}\n        </Typography>\n      </Box>\n    </Box>\n  )\n}\n\nexport const Resources = ({ hide, resources }) => {\n  const unlocks = useSelector(getUnlocks)\n\n  if (hide) {\n    return null\n  }\n\n  let _resources = resources\n  if (!Array.isArray(resources)) {\n    _resources = Object.entries(resources).map(([k, v]) => ({\n      resourceId: k,\n      ...v,\n    }))\n  }\n  return (\n    <Box className=\"flex flex-column\" my={1}>\n      {_resources\n        .filter((r) => unlocks.includes(r.resourceId))\n        .map((resource) => (\n          <Box key={resource.resourceId} display=\"flex\" flexDirection=\"row\">\n            <ResourceText resource={resource} />\n          </Box>\n        ))}\n      <ReactTooltip></ReactTooltip>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Box } from '@material-ui/core'\nimport { Resources } from './Resources'\nexport const Frame = ({ children, sidebar }) => (\n  <Box display=\"flex\">\n    <Box display=\"flex\" flexDirection=\"column\" flex={3} minWidth={150} p={1}>\n      {sidebar}\n    </Box>\n    <Box flex={7} p={1}>\n      {children}\n    </Box>\n  </Box>\n)\n\nexport const Sidebar = ({ label, resources, linkText, uri, children }) => (\n  <>\n    {uri ? <a href={uri}>{linkText}</a> : <br />}\n    <br />\n    <span>{label}</span>\n    {children}\n    <Resources resources={resources} />\n  </>\n)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Buildings } from '../components/Buildings'\nimport { People } from '../components/People'\nimport { getCities, getUnlocks } from '../selectors'\nimport { useParams } from 'react-router'\nimport { Sidebar, Frame } from '../components/Frame'\n// TODO: Add actions to allow citizens to all be assigned/deassigned\n\nexport const City = () => {\n  const { id = '0' } = useParams()\n  const cities = useSelector(getCities)\n  const unlocks = useSelector(getUnlocks)\n  const city = cities.find((c) => `${c.id}` === id)\n  if (!city) {\n    return null\n  }\n  const continentId = city.continent.id\n\n  return (\n    <Frame\n      sidebar={\n        <Sidebar\n          uri={unlocks.includes('continent') && `#/continent/${continentId}`}\n          linkText={\n            unlocks.includes('continent') && `Back to ${city.continent.label}`\n          }\n          label={`City: ${city.label}`}\n          resources={city.resources}\n        >\n          <span>biome: {city.plot.biome}</span>\n          <span>\n            housing: {city.people.length}/{city.housing}\n          </span>\n        </Sidebar>\n      }\n    >\n      <People continentId={continentId} cityId={city.id} people={city.people} />\n\n      <Buildings\n        continentId={continentId}\n        cityId={city.id}\n        buildings={city.buildings}\n      />\n    </Frame>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Box, Typography } from '@material-ui/core'\nimport {\n  getContinents,\n  getContinentResourceTotals,\n  getUnlocks,\n} from '../selectors'\nimport { Purchase } from '../components/Purchase'\nimport { createCity, explore } from '../actions'\nimport { useParams } from 'react-router'\nimport { Sidebar, Frame } from '../components/Frame'\nimport { Resources } from '../components/Resources'\n\nexport const Continent = () => {\n  const { id = '0' } = useParams()\n  const continent = useSelector(getContinents).find((c) => `${c.id}` === id)\n  const resources = useSelector(getContinentResourceTotals(+id))\n  const unlocks = useSelector(getUnlocks)\n\n  if (!continent) {\n    return null\n  }\n\n  return (\n    <Frame\n      sidebar={\n        <Sidebar\n          uri={unlocks.includes('planet') && `#/planet/${continent.planet.id}`}\n          linkText={\n            unlocks.includes('planet') && `Back to ${continent.planet.label}`\n          }\n          label={`Continent: ${continent.label}`}\n          resources={resources}\n        />\n      }\n    >\n      <span>Cities:</span>\n\n      <Box display=\"flex\" flexDirection=\"column\">\n        {continent.cities.map((city) => (\n          <CityItem key={city.id} city={city} />\n        ))}\n      </Box>\n\n      {continent.plots\n        .filter((p) => !p.city && p.explored)\n        .map((plot) => (\n          <Box key={`${plot.id}-explore`} display=\"flex\" alignItems=\"center\">\n            <Purchase\n              continentId={+id}\n              id=\"buyCity\"\n              action={createCity({ plotId: plot.id })}\n            />\n            <Typography>{plot.biome}</Typography>\n          </Box>\n        ))}\n\n      {continent.plots.filter((p) => !p.city && !p.explored).length > 0 && (\n        <Purchase\n          continentId={+id}\n          id=\"exploreContinent\"\n          action={explore({ continentId: continent.id })}\n        />\n      )}\n    </Frame>\n  )\n}\n\nconst CityItem = ({ city }) => (\n  <Box my={1} display=\"flex\" alignItems=\"center\">\n    <a\n      href={`#/city/${city.id}`}\n      style={{\n        marginRight: 8,\n      }}\n    >\n      {city.label}\n    </a>\n    <Resources hide resources={city.resources} />\n  </Box>\n)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Box } from '@material-ui/core'\nimport {\n  getPlanets,\n  getPlanetResourceTotals,\n  getContinentResourceTotals,\n  getUnlocks,\n} from '../selectors'\nimport { explore, settle } from '../actions'\nimport { Purchase } from '../components/Purchase'\nimport { useParams } from 'react-router'\nimport { Frame, Sidebar } from '../components/Frame'\nimport { Resources } from '../components/Resources'\n\nexport const Planet = () => {\n  const { id = '0' } = useParams()\n  const planets = useSelector(getPlanets)\n  const resources = useSelector(getPlanetResourceTotals(+id))\n  const unlocks = useSelector(getUnlocks)\n  const planet = planets.find((c) => `${c.id}` === id)\n  if (!planet) {\n    return null\n  }\n\n  return (\n    <Frame\n      sidebar={\n        <Sidebar\n          uri={unlocks.includes('system') && `#/system/${planet.system.id}`}\n          linkText={\n            unlocks.includes('system') && `Back to ${planet.system.label}`\n          }\n          label={`Planet: ${planet.label}`}\n          resources={resources}\n        >\n          <span>{planet.type.id}</span>\n        </Sidebar>\n      }\n    >\n      <span>Continents:</span>\n\n      <Box display=\"flex\" flexDirection=\"column\">\n        {planet.continents\n          .filter((c) => c.explored)\n          .map((continent) => (\n            <ContinentItem key={continent.id} continent={continent} />\n          ))}\n      </Box>\n\n      {planet.continents.filter((c) => !c.explored).length > 0 && (\n        <Purchase\n          planetId={+id}\n          id=\"explorePlanet\"\n          action={explore({ planetId: planet.id })}\n        />\n      )}\n    </Frame>\n  )\n}\n\nconst ContinentItem = ({ continent }) => {\n  const resources = useSelector(getContinentResourceTotals(continent.id))\n  return (\n    <Box my={1} display=\"flex\" alignItems=\"center\">\n      <a href={`#/continent/${continent.id}`} style={{ marginRight: 8 }}>\n        {continent.label}\n      </a>\n      <Resources hide resources={resources} />\n      {!continent.settled && (\n        <Purchase\n          id=\"settleContinent\"\n          action={settle({ continentId: continent.id })}\n        />\n      )}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Box } from '@material-ui/core'\nimport {\n  getSystems,\n  getSystemResourceTotals,\n  getPlanetResourceTotals,\n  getUnlocks,\n} from '../selectors'\nimport { explore, settle } from '../actions'\nimport { Purchase } from '../components/Purchase'\nimport { useParams } from 'react-router'\nimport { Sidebar, Frame } from '../components/Frame'\nimport { Resources } from '../components/Resources'\n\nexport const System = () => {\n  const { id = '0' } = useParams()\n  const systems = useSelector(getSystems)\n  const system = systems.find((c) => `${c.id}` === id)\n  const resources = useSelector(getSystemResourceTotals(+id))\n  const unlocks = useSelector(getUnlocks)\n  return (\n    <Frame\n      sidebar={\n        <Sidebar\n          uri={unlocks.includes('galaxy') && `#/`}\n          linkText={unlocks.includes('galaxy') && `Back to Galaxy`}\n          label={`System: ${system.label}`}\n          resources={resources}\n        />\n      }\n    >\n      <span>Planets:</span>\n\n      <Box display=\"flex\" flexDirection=\"column\">\n        {system.planets\n          .filter((p) => p.explored)\n          .map((planet) => (\n            <PlanetItem key={planet.id} planet={planet} />\n          ))}\n      </Box>\n\n      {system.planets.filter((p) => !p.explored).length > 0 && (\n        <Purchase\n          systemId={system.id}\n          id=\"exploreContinent\"\n          action={explore({ systemId: system.id })}\n        />\n      )}\n    </Frame>\n  )\n}\n\nconst PlanetItem = ({ planet }) => {\n  const resources = useSelector(getPlanetResourceTotals(planet.id))\n  return (\n    <Box my={1} display=\"flex\" alignItems=\"center\">\n      <a href={`#/planet/${planet.id}`} style={{ marginRight: 8 }}>\n        {planet.label}\n      </a>\n      <Resources hide resources={resources} />\n      {!planet.settled && (\n        <Purchase\n          systemId={planet.system.id}\n          id=\"settlePlanet\"\n          action={settle({ planetId: planet.id })}\n        />\n      )}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Box } from '@material-ui/core'\nimport {\n  getSystems,\n  getResourceTotals,\n  getSystemResourceTotals,\n} from '../selectors'\nimport { explore, settle } from '../actions'\nimport { Purchase } from '../components/Purchase'\nimport { Frame, Sidebar } from '../components/Frame'\nimport { Resources } from '../components/Resources'\n\nexport const Galaxy = () => {\n  const systems = useSelector(getSystems)\n  const resources = useSelector(getResourceTotals)\n  return (\n    <Frame sidebar={<Sidebar label=\"Galaxy\" resources={resources} />}>\n      <span>Systems:</span>\n\n      <Box display=\"flex\" flexDirection=\"column\">\n        {systems\n          .filter((p) => p.explored)\n          .map((system) => (\n            <SystemItem key={system.id} system={system} />\n          ))}\n      </Box>\n\n      {systems.filter((p) => !p.explored).length > 0 && (\n        <Purchase id=\"exploreGalaxy\" action={explore()} />\n      )}\n    </Frame>\n  )\n}\n\nconst SystemItem = ({ system }) => {\n  const resources = useSelector(getSystemResourceTotals(system.id))\n  return (\n    <Box my={1} display=\"flex\" alignItems=\"center\">\n      <a href={`#/system/${system.id}`} style={{ marginRight: 8 }}>\n        {system.label}\n      </a>\n      <Resources hide resources={resources} />\n      {!system.settled && (\n        <Purchase id=\"settleSystem\" action={settle({ systemId: system.id })} />\n      )}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { City } from './City'\nimport { Continent } from './Continent'\nimport { Planet } from './Planet'\nimport { System } from './System'\nimport { Galaxy } from './Galaxy'\nimport { useSelector } from 'react-redux'\nimport { getUnlocks } from '../selectors'\n\nexport const Routes = () => {\n  const unlocks = useSelector(getUnlocks)\n\n  return (\n    <Switch>\n      {unlocks.includes('system') && (\n        <Route exact path=\"/system/:id\" render={() => <System />} />\n      )}\n      {unlocks.includes('planet') && (\n        <Route exact path=\"/planet/:id\" render={() => <Planet />} />\n      )}\n      {unlocks.includes('continent') && (\n        <Route exact path=\"/continent/:id\" render={() => <Continent />} />\n      )}\n      <Route exact path=\"/city/:id\" render={() => <City />} />\n      <Route\n        path=\"*\"\n        render={() => {\n          if (unlocks.includes('galaxy')) return <Galaxy />\n          if (unlocks.includes('system')) return <System />\n          if (unlocks.includes('planet')) return <Planet />\n          if (unlocks.includes('continent')) return <Continent />\n          return <City />\n        }}\n      />\n    </Switch>\n  )\n}\n","import React, { useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport { useDispatch } from 'react-redux'\nimport { Container, Button, Box } from '@material-ui/core'\n\nimport { drag, createInitial, tick } from './actions'\nimport store, { persistor } from './store'\n\nimport './index.css'\nimport { Routes } from './routes'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { INTERVAL } from './data'\n\nif (process.env.NODE_ENV === 'development') {\n  const whyDidYouRender = require('@welldone-software/why-did-you-render')\n  whyDidYouRender(React)\n}\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(createInitial())\n  }, [dispatch])\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      dispatch(tick())\n    }, INTERVAL)\n    return () => clearInterval(id)\n  }, [dispatch])\n\n  return (\n    <Container>\n      <DragDropContext\n        onDragEnd={({ source, destination, ...rest }) =>\n          dispatch(drag({ source, destination, ...rest }))\n        }\n      >\n        <Routes />\n        <Box position=\"fixed\" bottom={0} right={0}>\n          <Button\n            onClick={() => {\n              persistor.purge()\n              localStorage.removeItem('hasSession')\n              window.location = '/#/city/0'\n              window.location.reload()\n            }}\n          >\n            Clear save\n          </Button>\n        </Box>\n      </DragDropContext>\n    </Container>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}